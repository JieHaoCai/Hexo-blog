{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"source/index.jpeg","path":"index.jpeg","modified":0,"renderable":0},{"_id":"themes/next/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"6454b7df314adcdbf4a3ccfc01f61d3823c6f6d9","modified":1698507994319},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1698504500724},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1698504501000},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1698504501034},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1698504500999},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1698504501036},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1698504501041},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1698504501043},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1698504501045},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1698504501047},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1698504501048},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1698504501049},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1698504501051},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1698504501052},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1698504501053},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1698504501055},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1698504501056},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1698504501056},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1698504501057},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1698504501058},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1698504501060},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1698504501063},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1698504501064},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1698504501064},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1698504501065},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1698504501066},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1698504501066},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1698504501067},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1698504501068},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1698504501069},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1698504501069},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1698504501070},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1698504501071},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1698504501072},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1698504501074},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1698504501075},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1698504501076},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1698504500822},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1698504500841},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1698504500872},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1698504500873},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1698504500881},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1698504500883},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1698504500895},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1698504500968},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1698504500770},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1698504500786},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1698504500789},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1698504500827},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1698504500847},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1698504500861},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1698504500863},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1698504500866},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1698504500869},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1698504500877},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1698504500889},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1698504500807},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1698504500835},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1698504500886},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1698504500893},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1698504500897},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1698504501007},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1698504501009},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1698504501033},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1698504500753},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1698504500998},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1698504500833},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1698504500844},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1698504500857},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1698504500879},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1698504500891},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1698504500900},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1698504501014},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1698504501016},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1698504501019},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1698504501021},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1698504501027},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1698504501028},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1698504501029},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1698504501030},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1698504501031},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1698504501032},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1698504501026},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1698504501029},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1698504500993},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1698504500984},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1698504500965},{"_id":"public/2023/10/28/hello-world/index.html","hash":"8ad5f58789c106da9c882313bbf2ef5099907845","modified":1698505594636},{"_id":"public/archives/index.html","hash":"48d3fde926cc6f357cc50e76ecd2e0105a1661ac","modified":1698505594636},{"_id":"public/archives/2023/index.html","hash":"ec67e329c66f621fbaf6d63d89971cf1c3dff4c1","modified":1698505594636},{"_id":"public/archives/2023/10/index.html","hash":"20848b5675c5ad655a5d32e3df7e20622281dfb8","modified":1698505594636},{"_id":"public/index.html","hash":"7d6f5126a85ae504ab8318ce32a0d329b58bfae5","modified":1698505594636},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1698505594636},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1698505594636},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1698505594636},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1698505594636},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1698505594636},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1698505594636},{"_id":"source/_posts/Flutter.md","hash":"cb752e8aa1b0aebf71d37b18dd12f962d79fc2b1","modified":1698508941178},{"_id":"source/_posts/index.md","hash":"6454b7df314adcdbf4a3ccfc01f61d3823c6f6d9","modified":1698508822384},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1698512110028},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1698512110028},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1698512110028},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1698512110029},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1698512110029},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1698512110029},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1698512110029},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1698512110029},{"_id":"themes/next/_config.yml","hash":"fa6f1fcf05688923bfdf06174d168eb5000bea98","modified":1698514077025},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1698512110029},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1698512110031},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1698512110035},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1698512110028},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1698512110028},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1698512110028},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1698512110028},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1698512110028},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1698512110028},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1698512110028},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1698512110028},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1698512110029},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1698512110029},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1698512110029},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1698512110029},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1698512110030},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1698512110030},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1698512110030},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1698512110030},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1698512110030},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1698512110030},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1698512110030},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1698512110031},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1698512110031},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1698512110031},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1698512110031},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1698512110032},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1698512110032},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1698512110032},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1698512110032},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1698512110032},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1698512110032},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1698512110032},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1698512110032},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1698512110030},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1698512110032},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1698512110032},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1698512110032},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1698512110032},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1698512110032},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1698512110032},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1698512110032},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1698512110032},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1698512110032},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1698512110032},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1698512110032},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1698512110035},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1698512110035},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1698512110035},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1698512110035},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1698512110035},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1698512110035},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1698512110036},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1698512110028},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1698512110028},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1698512110028},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1698512110028},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1698512110030},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1698512110030},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1698512110030},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1698512110030},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1698512110030},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1698512110031},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1698512110031},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1698512110033},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1698512110033},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1698512110033},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1698512110033},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1698512110033},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1698512110033},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1698512110033},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1698512110034},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1698512110034},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1698512110034},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1698512110034},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1698512110034},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1698512110034},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1698512110034},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1698512110035},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1698512110035},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1698512110035},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1698512110035},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1698512110036},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1698512110036},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1698512110036},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1698512110036},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1698512110036},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1698512110036},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1698512110036},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1698512110036},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1698512110036},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1698512110036},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1698512110036},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1698512110036},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1698512110036},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1698512110036},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1698512110036},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1698512110036},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1698512110036},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1698512110036},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1698512110036},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1698512110037},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1698512110039},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1698512110040},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1698512110040},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1698512110040},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1698512110040},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1698512110041},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1698512110041},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1698512110041},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1698512110041},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1698512110041},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1698512110041},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1698512110041},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1698512110041},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1698512110041},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1698512110041},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1698512110041},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1698512110041},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1698512110041},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1698512110041},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1698512110041},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1698512110042},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1698512110042},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1698512110033},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1698512110033},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1698512110033},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1698512110033},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1698512110033},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1698512110033},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1698512110033},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1698512110033},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1698512110033},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1698512110033},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1698512110033},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1698512110033},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1698512110033},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1698512110033},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1698512110034},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1698512110034},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1698512110034},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1698512110034},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1698512110034},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1698512110034},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1698512110034},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1698512110034},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1698512110034},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1698512110034},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1698512110034},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1698512110034},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1698512110034},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1698512110034},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1698512110034},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1698512110034},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1698512110034},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1698512110034},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1698512110034},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1698512110034},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1698512110034},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1698512110035},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1698512110035},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1698512110035},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1698512110035},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1698512110035},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1698512110035},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1698512110035},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1698512110035},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1698512110035},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1698512110035},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1698512110035},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1698512110035},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1698512110035},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1698512110035},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1698512110035},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1698512110036},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1698512110036},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1698512110040},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1698512110040},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1698512110040},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1698512110040},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1698512110040},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1698512110042},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1698512110042},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1698512110043},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1698512110043},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1698512110037},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1698512110040},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1698512110042},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1698512110043},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1698512110037},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1698512110037},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1698512110038},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1698512110038},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1698512110039},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1698512110039},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1698512110040},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1698512110040},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1698512110042},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1698512110043},{"_id":"source/index.md","hash":"51b5eecb5f69110c6385f9ac69a9afa1090425f3","modified":1698513187552},{"_id":"source/index.jpeg","hash":"a0ad93d24e6e9e1c6cc335ac212c706a5b553e9d","modified":1698513019191},{"_id":"themes/next/source/images/avatar.jpeg","hash":"a0ad93d24e6e9e1c6cc335ac212c706a5b553e9d","modified":1698513890325}],"Category":[],"Data":[],"Page":[{"title":"你好，陌生人👋","_content":"欢迎来到我的个人博客网站👏 ! \n\n我会在这里分享我的心得体会以及我从业前端一年以来的收获和感悟！\n\n![你好](/index.jpeg)\n\n# GitHub\n\n``` bash\nhttps://github.com/JieHaoCai\n```\n\n# CSDN\n\n``` bash\nhttps://blog.csdn.net/m0_46983722?spm=1000.2115.3001.5343\n```\n\n\n","source":"index.md","raw":"---\ntitle: 你好，陌生人👋\n---\n欢迎来到我的个人博客网站👏 ! \n\n我会在这里分享我的心得体会以及我从业前端一年以来的收获和感悟！\n\n![你好](/index.jpeg)\n\n# GitHub\n\n``` bash\nhttps://github.com/JieHaoCai\n```\n\n# CSDN\n\n``` bash\nhttps://blog.csdn.net/m0_46983722?spm=1000.2115.3001.5343\n```\n\n\n","date":"2023-10-28T17:13:07.568Z","updated":"2023-10-28T17:13:07.552Z","path":"index.html","_id":"cloaae7w10000f8mo7rql0gvj","comments":1,"layout":"page","content":"<p>欢迎来到我的个人博客网站👏 ! </p>\n<p>我会在这里分享我的心得体会以及我从业前端一年以来的收获和感悟！</p>\n<p><img src=\"/index.jpeg\" alt=\"你好\"></p>\n<h1 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/JieHaoCai</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSDN\"><a href=\"#CSDN\" class=\"headerlink\" title=\"CSDN\"></a>CSDN</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://blog.csdn.net/m0_46983722?spm=1000.2115.3001.5343</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>欢迎来到我的个人博客网站👏 ! </p>\n<p>我会在这里分享我的心得体会以及我从业前端一年以来的收获和感悟！</p>\n<p><img src=\"/index.jpeg\" alt=\"你好\"></p>\n<h1 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/JieHaoCai</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSDN\"><a href=\"#CSDN\" class=\"headerlink\" title=\"CSDN\"></a>CSDN</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://blog.csdn.net/m0_46983722?spm=1000.2115.3001.5343</span><br></pre></td></tr></table></figure>\n\n\n"}],"Post":[{"title":"Flutter 系列教程","_content":"\n\n\n# Flutter\n\n\n\n**如果你直接安装flutter就不需要安装dart了，因为flutter已经包含了dart环境了**\n\n所以推荐直接安装flutter即可\n\n\n\n## 安装dart\n\n首先你需要先安装homebrew，homebrew是一个软件资源包管理工具\n\n### 安装homebrew\n\n#### 外网环境\n\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n\n\n#### 推荐国内镜像\n\n```\n/bin/bash -c \"$(curl -fsSL https://gitee.com/wejectchan/brew/raw/master/install.sh)\"\n```\n\n\n\n### 安装dart\n\n```dart\nbrew tap dart-lang/dart\nbrew install dart\n```\n\n\n\n## 安装Flutter\n\n苹果电脑芯片有两种，一种是intel芯片（X86），一种是M系列芯片（Arm）\n\n### 查看系统芯片\n\n```\nuname -a\n```\n\n\n\n**注意安装一定要根据系统芯片来安装**\n\n\n\n具体查看\n\n```\nhttps://flutter.cn/docs/get-started/install/macos\n```\n\n\n\n#### **第一步先下载对应系统版本的压缩包**\n\n##### Intel芯片\n\n```\nintel：https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip\n```\n\n\n\n##### M系列芯片\n\n```\nhttps://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.13.7-stable.zip\n```\n\n\n\n#### **第二步解压到某一个文件路径**\n\n```\n cd ~/development\n unzip ~/Downloads/flutter_macos_3.13.7-stable.zip\n```\n\n\n\n#### **第三步配置环境变量**\n\n```\nexport PATH=\"$PATH: 文件路径/flutter/bin\"\n```\n\n这里需要注意，这样配置仅仅在当前命令窗生效，要永久生效则需要配置到shell文件中\n\n\n\n##### **永久配置具体看这里**\n\n```\nhttps://flutter.cn/docs/get-started/install/macos#update-your-path\n```\n\n```\n打开或者创建 shell 的 rc 文件，比如，在 Linux 和 macOS Mojave 或 Mojave 之前的系统里，是默认使用 Bash 的，所以需要修改 $HOME/.bashrc 文件。 macOS Catalina 操作系统默认使用 Z Shell，所以需要修改 $HOME/.zshrc 文件。请知晓，如果你使用不同的 shell，文件目录或文件名可能会有所不同。\n```\n\n```\n老旧的版本\nvim ~/.bash_profile \n或者open ~/.bash_profile\n\n\n最新版的系统都使用zshrc \nvim ~/.zshrc \n或者open ~/.zshrc\n\n\nexport PATH=\"$PATH: 文件路径/flutter/bin\"\nsource $HOME/.bash_profile 来刷新当前命令行窗口。\n```\n\n```\n通过运行以下命令来验证 flutter/bin 文件夹是否已经添加到 PATH 环境变量中：\n echo $PATH\n```\n\n```\n验证 flutter 命令是否可用，可以执行下面的命令检测：\nwhich flutter\n```\n\n\n\n### 安装苹果模拟器\n\n你只需要从应用商店下载Xcode进入之后会提示你下载模拟器，按要求下载即可\n\n\n\n不过通常会下载失败，因为模拟器镜像在国外，如果你有苹果开发者帐号可以通过抓取下载链接的形式去进行直接下载\n\n\n\n没有开发者帐号下载失败就多次重试，一般3到4次即可\n\n\n\n## 开发工具\n\n可以使用vscode或者Xcode（苹果）||Android Studio（安卓）\n\n\n\n\n\n## 推荐使用VScode\n\n使用vscode可以在扩展中搜索flutter相关扩展和dart，以便代码提示和自动导入文件\n\n\n\n```\nDart\n\nFlutter\n\nAwesome Flutter Snippets\n```\n\n\n\n\n\n# 创建项目\n\n\n\n如果你有Xcode或者Android Studio，直接创建Flutter项目即可\n\n\n\n如果你是用vscode则需要使用命令行去进行创建\n\n```\nflutter create flutter02\ncode .\nflutter run\nflutter devices //使用真机运行\n```\n\n\n\n最重要的就是**lib文件夹**以及**pubspec.yaml**文件，平台文件一般不需要理会\n\n\n\n我们编写代码都是在lib文件夹下进行编写\n\n\n\n![image-20231012112958050](C:\\Users\\Administrator\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231012112958050.png)\n\n\n\n# 使用第三方插件\n\n  进入官方网站搜索插件（推荐使用加速器）：\n\n```\nhttps://pub.dev/\n```\n\n进入之后搜索所需插件的安装方式即可\n\n**这里的重点是安装之后运行到模拟器这一步可能会出现cocospods安装失败甚至安装之后无法使用的问题。**\n\n\n\n## cocospods安装问题\n\n首先你需要安装`homebrew`，这里前面有教程不再赘述\n\n第二步，检查ruby版本，输入命令`ruby -v`，这里m系列芯片的电脑默认是自带ruby的，但是版本过低，我们需要更新ruby\n\n使用：\n\n```\nbrew install ruby\n```\n\n默认会下载最新的版本\n\n同时记得要去bash_profile编辑环境变量，否则可能会出现ruby系统版本没有改变的问题\n\n```\nexport PATH=/opt/homebrew/opt/ruby@3.2/bin:$PATH\n```\n\n查看ruby安装路径，可以在`/opt/homebrew/opt`目录中查看\n\n最关键的就是更新gem版本，这一步就会下载cocoapods\n\n```\nsudo gem update --system -n /usr/local/bin\n```\n\n可以通过查看命令判断cocoapods是否成功下载\n\n```\ngem list\n```\n\n如果出现cocoapods相关多个软件，说明安装成功\n\n输入命令：判断是否安装成功，如果成功，只会返回版本号，否则都算不成功\n\n```\npod --version\n```\n\n### 注意\n\n如果输入pod --version出现报错，很可能是由于gem中的activeSupport版本有bug，这个时候你需要安装稳定版的activeSupport 7.0.8，有问题的版本就是7.1.0之后的版本\n\n```\nsudo gem install activesupport -v 7.0.8 \n```\n\n```\nsudo gem uninstall activesupport -v 最新版\n```\n\n这样就可以使用第三方插件并运行在模拟器上面了。\n\n\n\n# Flutter 教程系列\n\n与其说是教程，不如说是讲**如何站在前端的角度**去看待Flutter框架，推荐安装`Getx`配合使用，Flutter是一款轻量级的框架，很多额外的功能都使用插件来配合完成。\n\nGetX：\n\n```\nhttps://github.com/jonataslaw/getx/blob/master/README.zh-cn.md\n```\n\n\n\n\n\n所以，你可以像这样安装我的依赖\n\n```\ndependencies:\n  fluttertoast: ^8.2.2\n  get:\n  dio: ^5.3.3\n  webview_flutter: ^4.4.1\n```\n\n\n\n## 配置环境变量\n\n```\nFLUTTER_STORAGE_BASE_URL ：https://storage.flutter-io.cn\n```\n\n这样使用Flutter run命令可能会出现如下情况：\n\n`Flutter assets will be downloaded from https://storage.flutter-io.cn. Make sure you trust this source!`\n\n无需理会！\n\n### 配置安卓gradle环境\n\n第一处：\n\n```\nbuildscript {\n    ext.kotlin_version = '1.7.10'\n    repositories {\n    \t//看这里\n        // google()\n        // mavenCentral()\n        maven { url 'https://maven.aliyun.com/repository/public' }\n        maven { url 'https://maven.aliyun.com/repository/google' }\n        // maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin'} \n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.3.0'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n```\n\n第二处：\n\n```\nallprojects {\n    repositories {\n    //看这里\n        // google()\n        // mavenCentral()\n        maven { url 'https://maven.aliyun.com/repository/google' }\n        maven { url 'https://maven.aliyun.com/repository/public' }\n        // maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin'}\n    }\n}\n```\n\n### 配置苹果环境变量\n\n```\nopen ~/.bash_profile\n\nexport path：flutter安装路径：PATH\n```\n\n## 路由\n\n原生Flutter有自己的路由方式\n\n### 跳转到下一个页面\n\n#### **第一种方式：（要传递参数直接放入即可）**\n\n```\nNavigator.of(context).push(MaterialPageRoute(builder: (context) {\n      //跳转并传参\n      return const SearchPage(\n         title: '你好',\n        );\n      }))\n```\n\n#### **第二种方式：通过路由名称,也可以传递参数**\n\n```\nNavigator.of(context).pushNamed(\"/pagebuilder\",arguments: {})\n```\n\n注意，这种方式需要提前定义好**路由栈**和**初始化路由**\n\n在main.dart中进行定义：\n\n```\nclass MyApp extends StatelessWidget {\n  MyApp({super.key});\n\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: \"Flutter Demo\",\n      //初始化路由\n      initialRoute: \"/\",\n      //定义路由栈\n       routes: router(context),\n    );\n  }\n}\n\nrouter(context) {\n  return {\n    \"/pageanmation\": (context) => const MyAnmationList(),\n    \"/pagefull\": (context) => const PageFullDemo(),\n    \"/pagebuilder\": (context) => const PageBuilderDemo(),\n    \"/pageview\": (context) => const MyPageView(),\n    \"/dialog\": (context) => const DialogPage(),\n    \"/login\": (context) => const LoginPage(),\n    \"/register\": (context) => const RegisterPage(),\n    \"/search\": (context) => const SearchPage(),\n    \"/\": (context) => const MyTabs(),\n    \"/categroy\": (context) => const CatrgroyPage()\n  };\n}\n\n```\n\n\n\n#### **第三种方式:推荐使用Getx**\n\nGetx拥有强大的统一的路由管理：\n\n```\n Get.toNamed(\"/search?hello=11111\", arguments: {\"msg\": \"hello\"});\n \n Get.to(NextScreen());\n```\n\n在main.dart中这样配置：\n\n`getPages`引入路由文件，使用`GetMaterialApp`强化MaterialApp\n\n```\n//引入路由\nimport './router/index.dart';\n\nclass MyApp extends StatelessWidget {\n  MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return GetMaterialApp(\n      //去除debug\n      debugShowCheckedModeBanner: false,\n      title: \"Flutter Demo\",\n      //初始化路由\n      initialRoute: \"/\",\n      // 以后统一使用这种方式去管理路由\n      getPages: AppPage.routes,\n    );\n  }\n}\n```\n\n新建一个router文件夹统一管理\n\n```\nimport 'package:get/get.dart';\n//导入页面\nimport '../page/tabs.dart';\nimport '../page/search.dart';\nimport '../page/tabs/categroy.dart';\nimport '../page/login.dart';\nimport '../page/register.dart';\nimport '../page/dialogdemo.dart';\nimport '../page/pageviewdemo.dart';\nimport '../page/pageviewbuilder.dart';\nimport '../page/pageFulldemo.dart';\nimport '../page/anmationListDemo.dart';\nimport '../page/getxstatedemo.dart';\nimport '../page/inputdemo.dart';\nimport '../page/webviewdemo.dart';\nimport '../page/i18ndemo.dart';\n//引入中间件\nimport 'middleware/shopMiddleware.dart';\n\nclass AppPage {\n  static final routes = [\n    GetPage(\n      name: \"/\",\n      page: () => const MyTabs(),\n      transition: Transition.leftToRight, //设置单个页面跳转的方式\n      // middlewares: [MiddlePageVC()],//设置中间件(GetPage),可以根据优先级设置多个中间件\n    ),\n    GetPage(\n        name: \"/pagefull\",\n        page: () => const PageFullDemo(),\n        transition: Transition.rightToLeft, //设置单个页面跳转的方式\n        middlewares: [shopMiddleware()]), //设置中间件(GetPage),可以根据优先级设置多个中间件\n    GetPage(\n        name: \"/pageanmation\",\n        page: () => const MyAnmationList(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/pagebuilder\",\n        page: () => const PageBuilderDemo(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/pageview\",\n        page: () => const MyPageView(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/dialog\",\n        page: () => const DialogPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/login\",\n        page: () => const LoginPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/register\",\n        page: () => const RegisterPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/search\",\n        page: () => const SearchPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/categroy\",\n        page: () => const CatrgroyPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/mygetx\",\n        page: () => MyGetXState(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/myinput\",\n        page: () => MyInputPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/mywebview\",\n        page: () => const MyWebviewPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/myi18n\",\n        page: () => const MyI18NPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n  ];\n}\n\n\n```\n\n最重要的是它可以每一个页面不同的跳转动画和方式以及中间件，非常适合企业级业务需求，例如跳转登录。\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart';\nimport 'package:flutter/cupertino.dart';\n\nclass shopMiddleware extends GetMiddleware {\n  @override\n  RouteSettings? redirect(String? route) {\n    print(route);\n    // return null;\n    //没有权限跳转到登录页面\n    return const RouteSettings(name: \"/login\", arguments: {\"msg\": \"你还未登录！\"});\n  }\n}\n\n```\n\n\n\n### 获取数据\n\n**如果你使用Getx**\n\n```\nGet.arguments\n```\n\n```\nGet.parameters\n```\n\n**如果不使用Getx，你需要提前定义对应的变量，注意把const移除掉，因为你已经不属于一个静态页面了**\n\n```\nfinal String title;\n\n  SearchPage({Key? key, required this.title}) : super(key: key);\n  \n  \n  //使用\n  (title: Text(widget.title)\n```\n\n\n\n### 返回上一个页面\n\n#### 第一种方式\n\n```\nNavigator.pop(context)\n```\n\n#### 第二种方式\n\n```\nNavigator.of(context).pop(\"好的\");\n\n//直接跳转到message页面，这种跳转方式相当于redirect，会删除前面一个页面\nNavigator.of(context).pushAndRemoveUntil(\n     MaterialPageRoute(builder: (context) {\n                  return const MessagePage();\n                }), (route) => false);\n                \n//使用替换路由跳转，相当于干掉前一个页面\nNavigator.of(context).pushReplacementNamed(\"/home\")\n```\n\n\n\n#### 第三种方式（Getx推荐）\n\n要关闭snackbars, dialogs, bottomsheets或任何你通常会用Navigator.pop(context)关闭的东西。\n\n```\nGet.back();\n```\n\n进入下一个页面，但**没有返回上一个页面的选项**（用于闪屏页，登录页面等）。\n\n```\nGet.off(NextScreen());\n```\n\n进入下一个页面并**取消之前的所有路由**（在购物车、投票和测试中很有用）\n\n如果你熟悉uniapp的话，这个相当于redirect\n\n```\nGet.offAll(NextScreen());\n```\n\n\n\n## 状态管理\n\n**注意：这里仅仅站在前端的角度去做**\n\n\n\n这里仅使用Getx进行状态管理，如果你熟悉前端的话，这一步相当于vue的vuex，react的redux。\n\n新建一个store文件夹\n\nindex.dart，这是一个统一管理所有状态的文件，\n\nGet.put方法运行放入一个控制器，这个控制器你可以把它当成一个全局的公共变量，放入之后Getx会进行内部的管理和追踪\n\n```\n//类似于vuex\n\nimport 'package:get/get.dart';\n\nimport './user.dart';\n\n//统一管理所有的store\nclass Store {\n  static final Store _instance = Store._internal();\n\n  factory Store() {\n    return _instance;\n  }\n  //将所有的store都放入这里\n  Store._internal() {\n    Get.put(UserController());\n  }\n}\n\n```\n\n通过继承GetxController使其变成一个可以追踪的控制器，并暴露出**响应式变量和函数**，这一步相当于暴露出所有的**state**，函数就是用来改变state的函数，相当于**mutation**\n\n```\nimport 'package:get/get.dart';\n\nclass UserController extends GetxController {\n  //这里定义变量\n  RxInt count = 0.obs;\n\n  //重置函数\n  void reset() {\n    count.value = 0;\n  }\n\n  //这里定义函数\n  void increment() {\n    count.value++;\n  }\n}\n\n```\n\n最后，在main.dart进行引入\n\n```\nimport './store/index.dart';\n\nvoid main() {\n  Store(); // 初始化Store实例\n  runApp(MyApp());\n}\n\n```\n\n这样，你就可以在App所有的页面拿到这些数据了，如何获取呢，\n\n既然有put的操作，就有find的操作\n\nGet.find函数非常强大，他能找到对应的控制器\n\n\n\n```\n  final UserController userController = Get.find<UserController>();\n```\n\n所有的数据就在userController中：\n\n\n\n注意：为了改变数据能够响应式的变化布局，因此，你需要使用Obx函数对响应式数据进行追踪，相当于**前端的观察者模式**\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart';\n\nimport '../../store/user.dart';\n\nclass CatrgroyPage extends StatefulWidget {\n  const CatrgroyPage({super.key});\n\n  @override\n  State<CatrgroyPage> createState() => _CatrgroyPageState();\n}\n\nclass _CatrgroyPageState extends State<CatrgroyPage> {\n  //通过Get.find获取同一个控制器实例，可以使用数据,注意，只有先put控制器，才能find，否则会报错\n  final UserController userController = Get.find<UserController>();\n\n  @override\n  Widget build(BuildContext context) {\n    return Center(\n      child: Column(children: [\n        Obx(() => Text('分类当前store里面的数值: ${userController.count.value}')),\n        ElevatedButton(\n            onPressed: () {\n              //不建议这么改，这样会导致数据的改变无法追踪，尽量调用方法去使用\n              // userfind.count.value = 10;\n              //建议这么修改\n              userController.reset();\n            },\n            child: const Text(\"重置\"))\n      ]),\n    );\n  }\n}\n\n```\n\n\n\n看到这里，如果你是一名前端，你可以简单的把它理解成，通过定义一个函数，把函数放入Getx（put）中，Getx就可以自动帮你管理，要使用就拿出来（find），同时数据的改变要引起页面的重新渲染，需要使用观察者（Obx）通知Getx对页面进行改变，是不是有vue的双向绑定的意思了。\n\n\n\n**如果你不使用Getx，但是你的数据改变没有引起页面的变化，你需要看看是否使用了setState函数，这跟React的思路是一样的，如果你了解React，你就明白什么意思了。**\n\n\n\n## Webview\n\n这里使用Webiew_Flutter插件来实现，这是官方提供的webview插件\n\n这里仅使用于安卓或苹果移动端设备，不适用于web\n\n### 下载依赖\n\n```\n webview_flutter: ^4.4.1\n```\n\n### 开启权限\n\n安卓需要开启网络权限，默认是开启的\n\n苹果需要配置ios/Runner/info.plist文件，加上这个\n\n```\n\t<!-- 使ios运行运行webview -->\n \t<key>io.flutter.embedded_views_preview</key>\n    <string>YES</string>\n```\n\n### 使用\n\n**第一步，先声明一个weviewController**\n\n```\n  late WebViewController controller;\n```\n\n**第二步，在 initState 中初始化 controller**\n\n```\n  void initState() {\n    //第二步，在 initState 中初始化 controller\n    controller = WebViewController()\n\t      //默认是不开启的，手动开启支持js\n      ..setJavaScriptMode(JavaScriptMode.unrestricted)\n     ..loadRequest(Uri.parse('https://www.csdn.net/'), headers: {})\n    super.initState();\n  }\n```\n\n**第三步，使用WebViewWidget,使用sizebox可以控制大小**\n\n```\n        SizedBox(\n            height: 400,\n            child: WebViewWidget(\n                //控制器\n                controller: controller,\n   )),\n```\n\n这样就大功告成了，你就可以在页面上面看到webview页面了\n\n\n\n手势操作，在WebViewWidget配置第二个参数\n\n```\n                //手势操作\n                gestureRecognizers: {\n                  Factory<VerticalDragGestureRecognizer>(\n                    () {\n                      return VerticalDragGestureRecognizer()\n                        ..onStart = (DragStartDetails details) {\n                          print(\"start\");\n                        }\n                        ..onDown = (DragDownDetails details) {\n                          print(\"down: $details\");\n                        };\n                    },\n                  )\n                }\n```\n\n\n\n设置UA\n\n```\n ..setUserAgent(\n          // \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36\"\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36\")\n```\n\n\n\n路由操作：这个非常种要，可以追踪链接变化，注入JS，拦截等操作\n\n```\n      ..setNavigationDelegate(NavigationDelegate(\n        //   //页面开始请求,获取页面请求\n        onNavigationRequest: (requset) {\n          print(\"页面请求参数 ${requset.url}\");\n          return NavigationDecision.navigate;\n        },\n        //   //页面开始加载\n        //   onPageStarted: (url) {},\n        //页面加载完毕,注入js,既使 WebView 加载的页面中可能还有链接，跳到另一个地址，js 注入的代码依然有效！\n        onPageFinished: (url) async {\n          var cookie = await controller\n              .runJavaScriptReturningResult('document.cookie') as String;\n\n          var ua = await controller\n              .runJavaScriptReturningResult('navigator.userAgent;') as String;\n          print(\"当前页面的cookie：$cookie,当前的ua是 $ua\");\n        },\n        //   //加载错误\n        //   onWebResourceError: (error) {\n        //     print(error);\n        //   },\n      ));\n```\n\n\n\n## 国际化\n\n\n\n使用Getx进行国际化配置非常简单，这里站在前端角度去进行配置\n\n\n\n建立一个i18n文件夹，统一管理在index\n\n```\nimport 'package:get/get.dart';\nimport './zh_CN.dart';\nimport './en_US.dart';\n\nclass Messages extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        ...ZhCN().keys,\n        ...EnUS().keys,\n      };\n}\n\n```\n\nen_US\n\n```\nimport 'package:get/get.dart';\n\nclass EnUS extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        'en_US': {\n          'hello': 'hello world',\n        },\n      };\n}\n\n```\n\nzh_CN\n\n```\nimport 'package:get/get.dart';\n\nclass ZhCN extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        'zh_CN': {\n          'hello': '你好 世界',\n        },\n      };\n}\n\n```\n\n在main.dart进行配置\n\n```\n import 'i18n/index.dart';\n \n \n @override\n  Widget build(BuildContext context) {\n    return GetMaterialApp(\n      //去除debug\n      debugShowCheckedModeBanner: false,\n      title: \"Flutter Demo\",\n      //初始化路由\n      initialRoute: \"/\",\n      //命名路由\n      // routes: router(context),\n      // 以后统一使用这种方式去管理路由\n      getPages: AppPage.routes,\n      translations: Messages(), // 你的翻译\n      locale: Locale('zh', 'CN'), // 将会按照此处指定的语言翻译\n      fallbackLocale: Locale('en', 'US'), // 添加一个回调语言选项，以备上面指定的语言翻译不存在\n      // locale: ui.window.locale,  //读取系统语言\n    );\n  }\n```\n\n使用：\n\n```\n Text('hello'.tr)\n```\n\n\n\n改变语言\n\n```\n Get.updateLocale(Locale('en', 'US'))；\n Get.updateLocale(Locale('zh', 'CN'));\n```\n\n\n\n非常简单，这样，你只需要在不同地区配置不同文件即可。\n\n\n\n## 样式和布局\n\n样式和布局可以查看我项目代码中的demo，每一个样式文件都有命名标识，如果要运行查看，直接复制替换到main.dart进行运行查看即可，这里不多赘述，样式和布局多敲就可以。\n\n\n\n或者运行项目，点击查看对应的效果，结合代码进行查看。\n\n\n\n## 网络Api\n\n\n\n具体可以看我代码中的api部分\n\n\n\n# 真机测试\n\n## 安卓机型\n\n如果你使用安卓设备进行测试的话，仅需要开启`开发者模式`并将手机连接到电脑设备上选择传输文件即可\n\n## 苹果机型\n\n如果你是iOS设备的话，请仔细看以下步骤：\n\n**第一步，你需要描述文件和p12证书**，这两个东西你只能从开发者账号中去获取\n\n双击打开p12证书，这时候系统会弹出弹窗，请输入证书密码，并将证书放入登录（在弹窗的右下角有选项）\n\n第二步，打开Flutter项目，点击ios/Runner.xcworkspace文件，这个时候会自动打开Xcode，请你配置上对应的包名以及p12文件，没有出现红色警告说明配置成功，这个时候只需要点击左上角的运行命令即可。\n\n\n\n第三步，后续就可以直接在vscode中运行即可，可以不需要在xcode中打开。\n\n\n\n","source":"_posts/Flutter.md","raw":"\n\n\n\ntitle: Flutter 系列教程\n\n------\n\n\n\n# Flutter\n\n\n\n**如果你直接安装flutter就不需要安装dart了，因为flutter已经包含了dart环境了**\n\n所以推荐直接安装flutter即可\n\n\n\n## 安装dart\n\n首先你需要先安装homebrew，homebrew是一个软件资源包管理工具\n\n### 安装homebrew\n\n#### 外网环境\n\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n\n\n#### 推荐国内镜像\n\n```\n/bin/bash -c \"$(curl -fsSL https://gitee.com/wejectchan/brew/raw/master/install.sh)\"\n```\n\n\n\n### 安装dart\n\n```dart\nbrew tap dart-lang/dart\nbrew install dart\n```\n\n\n\n## 安装Flutter\n\n苹果电脑芯片有两种，一种是intel芯片（X86），一种是M系列芯片（Arm）\n\n### 查看系统芯片\n\n```\nuname -a\n```\n\n\n\n**注意安装一定要根据系统芯片来安装**\n\n\n\n具体查看\n\n```\nhttps://flutter.cn/docs/get-started/install/macos\n```\n\n\n\n#### **第一步先下载对应系统版本的压缩包**\n\n##### Intel芯片\n\n```\nintel：https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip\n```\n\n\n\n##### M系列芯片\n\n```\nhttps://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.13.7-stable.zip\n```\n\n\n\n#### **第二步解压到某一个文件路径**\n\n```\n cd ~/development\n unzip ~/Downloads/flutter_macos_3.13.7-stable.zip\n```\n\n\n\n#### **第三步配置环境变量**\n\n```\nexport PATH=\"$PATH: 文件路径/flutter/bin\"\n```\n\n这里需要注意，这样配置仅仅在当前命令窗生效，要永久生效则需要配置到shell文件中\n\n\n\n##### **永久配置具体看这里**\n\n```\nhttps://flutter.cn/docs/get-started/install/macos#update-your-path\n```\n\n```\n打开或者创建 shell 的 rc 文件，比如，在 Linux 和 macOS Mojave 或 Mojave 之前的系统里，是默认使用 Bash 的，所以需要修改 $HOME/.bashrc 文件。 macOS Catalina 操作系统默认使用 Z Shell，所以需要修改 $HOME/.zshrc 文件。请知晓，如果你使用不同的 shell，文件目录或文件名可能会有所不同。\n```\n\n```\n老旧的版本\nvim ~/.bash_profile \n或者open ~/.bash_profile\n\n\n最新版的系统都使用zshrc \nvim ~/.zshrc \n或者open ~/.zshrc\n\n\nexport PATH=\"$PATH: 文件路径/flutter/bin\"\nsource $HOME/.bash_profile 来刷新当前命令行窗口。\n```\n\n```\n通过运行以下命令来验证 flutter/bin 文件夹是否已经添加到 PATH 环境变量中：\n echo $PATH\n```\n\n```\n验证 flutter 命令是否可用，可以执行下面的命令检测：\nwhich flutter\n```\n\n\n\n### 安装苹果模拟器\n\n你只需要从应用商店下载Xcode进入之后会提示你下载模拟器，按要求下载即可\n\n\n\n不过通常会下载失败，因为模拟器镜像在国外，如果你有苹果开发者帐号可以通过抓取下载链接的形式去进行直接下载\n\n\n\n没有开发者帐号下载失败就多次重试，一般3到4次即可\n\n\n\n## 开发工具\n\n可以使用vscode或者Xcode（苹果）||Android Studio（安卓）\n\n\n\n\n\n## 推荐使用VScode\n\n使用vscode可以在扩展中搜索flutter相关扩展和dart，以便代码提示和自动导入文件\n\n\n\n```\nDart\n\nFlutter\n\nAwesome Flutter Snippets\n```\n\n\n\n\n\n# 创建项目\n\n\n\n如果你有Xcode或者Android Studio，直接创建Flutter项目即可\n\n\n\n如果你是用vscode则需要使用命令行去进行创建\n\n```\nflutter create flutter02\ncode .\nflutter run\nflutter devices //使用真机运行\n```\n\n\n\n最重要的就是**lib文件夹**以及**pubspec.yaml**文件，平台文件一般不需要理会\n\n\n\n我们编写代码都是在lib文件夹下进行编写\n\n\n\n![image-20231012112958050](C:\\Users\\Administrator\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231012112958050.png)\n\n\n\n# 使用第三方插件\n\n  进入官方网站搜索插件（推荐使用加速器）：\n\n```\nhttps://pub.dev/\n```\n\n进入之后搜索所需插件的安装方式即可\n\n**这里的重点是安装之后运行到模拟器这一步可能会出现cocospods安装失败甚至安装之后无法使用的问题。**\n\n\n\n## cocospods安装问题\n\n首先你需要安装`homebrew`，这里前面有教程不再赘述\n\n第二步，检查ruby版本，输入命令`ruby -v`，这里m系列芯片的电脑默认是自带ruby的，但是版本过低，我们需要更新ruby\n\n使用：\n\n```\nbrew install ruby\n```\n\n默认会下载最新的版本\n\n同时记得要去bash_profile编辑环境变量，否则可能会出现ruby系统版本没有改变的问题\n\n```\nexport PATH=/opt/homebrew/opt/ruby@3.2/bin:$PATH\n```\n\n查看ruby安装路径，可以在`/opt/homebrew/opt`目录中查看\n\n最关键的就是更新gem版本，这一步就会下载cocoapods\n\n```\nsudo gem update --system -n /usr/local/bin\n```\n\n可以通过查看命令判断cocoapods是否成功下载\n\n```\ngem list\n```\n\n如果出现cocoapods相关多个软件，说明安装成功\n\n输入命令：判断是否安装成功，如果成功，只会返回版本号，否则都算不成功\n\n```\npod --version\n```\n\n### 注意\n\n如果输入pod --version出现报错，很可能是由于gem中的activeSupport版本有bug，这个时候你需要安装稳定版的activeSupport 7.0.8，有问题的版本就是7.1.0之后的版本\n\n```\nsudo gem install activesupport -v 7.0.8 \n```\n\n```\nsudo gem uninstall activesupport -v 最新版\n```\n\n这样就可以使用第三方插件并运行在模拟器上面了。\n\n\n\n# Flutter 教程系列\n\n与其说是教程，不如说是讲**如何站在前端的角度**去看待Flutter框架，推荐安装`Getx`配合使用，Flutter是一款轻量级的框架，很多额外的功能都使用插件来配合完成。\n\nGetX：\n\n```\nhttps://github.com/jonataslaw/getx/blob/master/README.zh-cn.md\n```\n\n\n\n\n\n所以，你可以像这样安装我的依赖\n\n```\ndependencies:\n  fluttertoast: ^8.2.2\n  get:\n  dio: ^5.3.3\n  webview_flutter: ^4.4.1\n```\n\n\n\n## 配置环境变量\n\n```\nFLUTTER_STORAGE_BASE_URL ：https://storage.flutter-io.cn\n```\n\n这样使用Flutter run命令可能会出现如下情况：\n\n`Flutter assets will be downloaded from https://storage.flutter-io.cn. Make sure you trust this source!`\n\n无需理会！\n\n### 配置安卓gradle环境\n\n第一处：\n\n```\nbuildscript {\n    ext.kotlin_version = '1.7.10'\n    repositories {\n    \t//看这里\n        // google()\n        // mavenCentral()\n        maven { url 'https://maven.aliyun.com/repository/public' }\n        maven { url 'https://maven.aliyun.com/repository/google' }\n        // maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin'} \n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.3.0'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n```\n\n第二处：\n\n```\nallprojects {\n    repositories {\n    //看这里\n        // google()\n        // mavenCentral()\n        maven { url 'https://maven.aliyun.com/repository/google' }\n        maven { url 'https://maven.aliyun.com/repository/public' }\n        // maven { url 'http://maven.aliyun.com/nexus/content/groups/public'}\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin'}\n    }\n}\n```\n\n### 配置苹果环境变量\n\n```\nopen ~/.bash_profile\n\nexport path：flutter安装路径：PATH\n```\n\n## 路由\n\n原生Flutter有自己的路由方式\n\n### 跳转到下一个页面\n\n#### **第一种方式：（要传递参数直接放入即可）**\n\n```\nNavigator.of(context).push(MaterialPageRoute(builder: (context) {\n      //跳转并传参\n      return const SearchPage(\n         title: '你好',\n        );\n      }))\n```\n\n#### **第二种方式：通过路由名称,也可以传递参数**\n\n```\nNavigator.of(context).pushNamed(\"/pagebuilder\",arguments: {})\n```\n\n注意，这种方式需要提前定义好**路由栈**和**初始化路由**\n\n在main.dart中进行定义：\n\n```\nclass MyApp extends StatelessWidget {\n  MyApp({super.key});\n\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: \"Flutter Demo\",\n      //初始化路由\n      initialRoute: \"/\",\n      //定义路由栈\n       routes: router(context),\n    );\n  }\n}\n\nrouter(context) {\n  return {\n    \"/pageanmation\": (context) => const MyAnmationList(),\n    \"/pagefull\": (context) => const PageFullDemo(),\n    \"/pagebuilder\": (context) => const PageBuilderDemo(),\n    \"/pageview\": (context) => const MyPageView(),\n    \"/dialog\": (context) => const DialogPage(),\n    \"/login\": (context) => const LoginPage(),\n    \"/register\": (context) => const RegisterPage(),\n    \"/search\": (context) => const SearchPage(),\n    \"/\": (context) => const MyTabs(),\n    \"/categroy\": (context) => const CatrgroyPage()\n  };\n}\n\n```\n\n\n\n#### **第三种方式:推荐使用Getx**\n\nGetx拥有强大的统一的路由管理：\n\n```\n Get.toNamed(\"/search?hello=11111\", arguments: {\"msg\": \"hello\"});\n \n Get.to(NextScreen());\n```\n\n在main.dart中这样配置：\n\n`getPages`引入路由文件，使用`GetMaterialApp`强化MaterialApp\n\n```\n//引入路由\nimport './router/index.dart';\n\nclass MyApp extends StatelessWidget {\n  MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return GetMaterialApp(\n      //去除debug\n      debugShowCheckedModeBanner: false,\n      title: \"Flutter Demo\",\n      //初始化路由\n      initialRoute: \"/\",\n      // 以后统一使用这种方式去管理路由\n      getPages: AppPage.routes,\n    );\n  }\n}\n```\n\n新建一个router文件夹统一管理\n\n```\nimport 'package:get/get.dart';\n//导入页面\nimport '../page/tabs.dart';\nimport '../page/search.dart';\nimport '../page/tabs/categroy.dart';\nimport '../page/login.dart';\nimport '../page/register.dart';\nimport '../page/dialogdemo.dart';\nimport '../page/pageviewdemo.dart';\nimport '../page/pageviewbuilder.dart';\nimport '../page/pageFulldemo.dart';\nimport '../page/anmationListDemo.dart';\nimport '../page/getxstatedemo.dart';\nimport '../page/inputdemo.dart';\nimport '../page/webviewdemo.dart';\nimport '../page/i18ndemo.dart';\n//引入中间件\nimport 'middleware/shopMiddleware.dart';\n\nclass AppPage {\n  static final routes = [\n    GetPage(\n      name: \"/\",\n      page: () => const MyTabs(),\n      transition: Transition.leftToRight, //设置单个页面跳转的方式\n      // middlewares: [MiddlePageVC()],//设置中间件(GetPage),可以根据优先级设置多个中间件\n    ),\n    GetPage(\n        name: \"/pagefull\",\n        page: () => const PageFullDemo(),\n        transition: Transition.rightToLeft, //设置单个页面跳转的方式\n        middlewares: [shopMiddleware()]), //设置中间件(GetPage),可以根据优先级设置多个中间件\n    GetPage(\n        name: \"/pageanmation\",\n        page: () => const MyAnmationList(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/pagebuilder\",\n        page: () => const PageBuilderDemo(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/pageview\",\n        page: () => const MyPageView(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/dialog\",\n        page: () => const DialogPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/login\",\n        page: () => const LoginPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/register\",\n        page: () => const RegisterPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/search\",\n        page: () => const SearchPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/categroy\",\n        page: () => const CatrgroyPage(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/mygetx\",\n        page: () => MyGetXState(),\n        transition: Transition.leftToRight //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/myinput\",\n        page: () => MyInputPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/mywebview\",\n        page: () => const MyWebviewPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n    GetPage(\n        name: \"/myi18n\",\n        page: () => const MyI18NPage(),\n        transition: Transition.rightToLeft //设置单个页面跳转的方式\n        ),\n  ];\n}\n\n\n```\n\n最重要的是它可以每一个页面不同的跳转动画和方式以及中间件，非常适合企业级业务需求，例如跳转登录。\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart';\nimport 'package:flutter/cupertino.dart';\n\nclass shopMiddleware extends GetMiddleware {\n  @override\n  RouteSettings? redirect(String? route) {\n    print(route);\n    // return null;\n    //没有权限跳转到登录页面\n    return const RouteSettings(name: \"/login\", arguments: {\"msg\": \"你还未登录！\"});\n  }\n}\n\n```\n\n\n\n### 获取数据\n\n**如果你使用Getx**\n\n```\nGet.arguments\n```\n\n```\nGet.parameters\n```\n\n**如果不使用Getx，你需要提前定义对应的变量，注意把const移除掉，因为你已经不属于一个静态页面了**\n\n```\nfinal String title;\n\n  SearchPage({Key? key, required this.title}) : super(key: key);\n  \n  \n  //使用\n  (title: Text(widget.title)\n```\n\n\n\n### 返回上一个页面\n\n#### 第一种方式\n\n```\nNavigator.pop(context)\n```\n\n#### 第二种方式\n\n```\nNavigator.of(context).pop(\"好的\");\n\n//直接跳转到message页面，这种跳转方式相当于redirect，会删除前面一个页面\nNavigator.of(context).pushAndRemoveUntil(\n     MaterialPageRoute(builder: (context) {\n                  return const MessagePage();\n                }), (route) => false);\n                \n//使用替换路由跳转，相当于干掉前一个页面\nNavigator.of(context).pushReplacementNamed(\"/home\")\n```\n\n\n\n#### 第三种方式（Getx推荐）\n\n要关闭snackbars, dialogs, bottomsheets或任何你通常会用Navigator.pop(context)关闭的东西。\n\n```\nGet.back();\n```\n\n进入下一个页面，但**没有返回上一个页面的选项**（用于闪屏页，登录页面等）。\n\n```\nGet.off(NextScreen());\n```\n\n进入下一个页面并**取消之前的所有路由**（在购物车、投票和测试中很有用）\n\n如果你熟悉uniapp的话，这个相当于redirect\n\n```\nGet.offAll(NextScreen());\n```\n\n\n\n## 状态管理\n\n**注意：这里仅仅站在前端的角度去做**\n\n\n\n这里仅使用Getx进行状态管理，如果你熟悉前端的话，这一步相当于vue的vuex，react的redux。\n\n新建一个store文件夹\n\nindex.dart，这是一个统一管理所有状态的文件，\n\nGet.put方法运行放入一个控制器，这个控制器你可以把它当成一个全局的公共变量，放入之后Getx会进行内部的管理和追踪\n\n```\n//类似于vuex\n\nimport 'package:get/get.dart';\n\nimport './user.dart';\n\n//统一管理所有的store\nclass Store {\n  static final Store _instance = Store._internal();\n\n  factory Store() {\n    return _instance;\n  }\n  //将所有的store都放入这里\n  Store._internal() {\n    Get.put(UserController());\n  }\n}\n\n```\n\n通过继承GetxController使其变成一个可以追踪的控制器，并暴露出**响应式变量和函数**，这一步相当于暴露出所有的**state**，函数就是用来改变state的函数，相当于**mutation**\n\n```\nimport 'package:get/get.dart';\n\nclass UserController extends GetxController {\n  //这里定义变量\n  RxInt count = 0.obs;\n\n  //重置函数\n  void reset() {\n    count.value = 0;\n  }\n\n  //这里定义函数\n  void increment() {\n    count.value++;\n  }\n}\n\n```\n\n最后，在main.dart进行引入\n\n```\nimport './store/index.dart';\n\nvoid main() {\n  Store(); // 初始化Store实例\n  runApp(MyApp());\n}\n\n```\n\n这样，你就可以在App所有的页面拿到这些数据了，如何获取呢，\n\n既然有put的操作，就有find的操作\n\nGet.find函数非常强大，他能找到对应的控制器\n\n\n\n```\n  final UserController userController = Get.find<UserController>();\n```\n\n所有的数据就在userController中：\n\n\n\n注意：为了改变数据能够响应式的变化布局，因此，你需要使用Obx函数对响应式数据进行追踪，相当于**前端的观察者模式**\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart';\n\nimport '../../store/user.dart';\n\nclass CatrgroyPage extends StatefulWidget {\n  const CatrgroyPage({super.key});\n\n  @override\n  State<CatrgroyPage> createState() => _CatrgroyPageState();\n}\n\nclass _CatrgroyPageState extends State<CatrgroyPage> {\n  //通过Get.find获取同一个控制器实例，可以使用数据,注意，只有先put控制器，才能find，否则会报错\n  final UserController userController = Get.find<UserController>();\n\n  @override\n  Widget build(BuildContext context) {\n    return Center(\n      child: Column(children: [\n        Obx(() => Text('分类当前store里面的数值: ${userController.count.value}')),\n        ElevatedButton(\n            onPressed: () {\n              //不建议这么改，这样会导致数据的改变无法追踪，尽量调用方法去使用\n              // userfind.count.value = 10;\n              //建议这么修改\n              userController.reset();\n            },\n            child: const Text(\"重置\"))\n      ]),\n    );\n  }\n}\n\n```\n\n\n\n看到这里，如果你是一名前端，你可以简单的把它理解成，通过定义一个函数，把函数放入Getx（put）中，Getx就可以自动帮你管理，要使用就拿出来（find），同时数据的改变要引起页面的重新渲染，需要使用观察者（Obx）通知Getx对页面进行改变，是不是有vue的双向绑定的意思了。\n\n\n\n**如果你不使用Getx，但是你的数据改变没有引起页面的变化，你需要看看是否使用了setState函数，这跟React的思路是一样的，如果你了解React，你就明白什么意思了。**\n\n\n\n## Webview\n\n这里使用Webiew_Flutter插件来实现，这是官方提供的webview插件\n\n这里仅使用于安卓或苹果移动端设备，不适用于web\n\n### 下载依赖\n\n```\n webview_flutter: ^4.4.1\n```\n\n### 开启权限\n\n安卓需要开启网络权限，默认是开启的\n\n苹果需要配置ios/Runner/info.plist文件，加上这个\n\n```\n\t<!-- 使ios运行运行webview -->\n \t<key>io.flutter.embedded_views_preview</key>\n    <string>YES</string>\n```\n\n### 使用\n\n**第一步，先声明一个weviewController**\n\n```\n  late WebViewController controller;\n```\n\n**第二步，在 initState 中初始化 controller**\n\n```\n  void initState() {\n    //第二步，在 initState 中初始化 controller\n    controller = WebViewController()\n\t      //默认是不开启的，手动开启支持js\n      ..setJavaScriptMode(JavaScriptMode.unrestricted)\n     ..loadRequest(Uri.parse('https://www.csdn.net/'), headers: {})\n    super.initState();\n  }\n```\n\n**第三步，使用WebViewWidget,使用sizebox可以控制大小**\n\n```\n        SizedBox(\n            height: 400,\n            child: WebViewWidget(\n                //控制器\n                controller: controller,\n   )),\n```\n\n这样就大功告成了，你就可以在页面上面看到webview页面了\n\n\n\n手势操作，在WebViewWidget配置第二个参数\n\n```\n                //手势操作\n                gestureRecognizers: {\n                  Factory<VerticalDragGestureRecognizer>(\n                    () {\n                      return VerticalDragGestureRecognizer()\n                        ..onStart = (DragStartDetails details) {\n                          print(\"start\");\n                        }\n                        ..onDown = (DragDownDetails details) {\n                          print(\"down: $details\");\n                        };\n                    },\n                  )\n                }\n```\n\n\n\n设置UA\n\n```\n ..setUserAgent(\n          // \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36\"\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36\")\n```\n\n\n\n路由操作：这个非常种要，可以追踪链接变化，注入JS，拦截等操作\n\n```\n      ..setNavigationDelegate(NavigationDelegate(\n        //   //页面开始请求,获取页面请求\n        onNavigationRequest: (requset) {\n          print(\"页面请求参数 ${requset.url}\");\n          return NavigationDecision.navigate;\n        },\n        //   //页面开始加载\n        //   onPageStarted: (url) {},\n        //页面加载完毕,注入js,既使 WebView 加载的页面中可能还有链接，跳到另一个地址，js 注入的代码依然有效！\n        onPageFinished: (url) async {\n          var cookie = await controller\n              .runJavaScriptReturningResult('document.cookie') as String;\n\n          var ua = await controller\n              .runJavaScriptReturningResult('navigator.userAgent;') as String;\n          print(\"当前页面的cookie：$cookie,当前的ua是 $ua\");\n        },\n        //   //加载错误\n        //   onWebResourceError: (error) {\n        //     print(error);\n        //   },\n      ));\n```\n\n\n\n## 国际化\n\n\n\n使用Getx进行国际化配置非常简单，这里站在前端角度去进行配置\n\n\n\n建立一个i18n文件夹，统一管理在index\n\n```\nimport 'package:get/get.dart';\nimport './zh_CN.dart';\nimport './en_US.dart';\n\nclass Messages extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        ...ZhCN().keys,\n        ...EnUS().keys,\n      };\n}\n\n```\n\nen_US\n\n```\nimport 'package:get/get.dart';\n\nclass EnUS extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        'en_US': {\n          'hello': 'hello world',\n        },\n      };\n}\n\n```\n\nzh_CN\n\n```\nimport 'package:get/get.dart';\n\nclass ZhCN extends Translations {\n  @override\n  Map<String, Map<String, String>> get keys => {\n        'zh_CN': {\n          'hello': '你好 世界',\n        },\n      };\n}\n\n```\n\n在main.dart进行配置\n\n```\n import 'i18n/index.dart';\n \n \n @override\n  Widget build(BuildContext context) {\n    return GetMaterialApp(\n      //去除debug\n      debugShowCheckedModeBanner: false,\n      title: \"Flutter Demo\",\n      //初始化路由\n      initialRoute: \"/\",\n      //命名路由\n      // routes: router(context),\n      // 以后统一使用这种方式去管理路由\n      getPages: AppPage.routes,\n      translations: Messages(), // 你的翻译\n      locale: Locale('zh', 'CN'), // 将会按照此处指定的语言翻译\n      fallbackLocale: Locale('en', 'US'), // 添加一个回调语言选项，以备上面指定的语言翻译不存在\n      // locale: ui.window.locale,  //读取系统语言\n    );\n  }\n```\n\n使用：\n\n```\n Text('hello'.tr)\n```\n\n\n\n改变语言\n\n```\n Get.updateLocale(Locale('en', 'US'))；\n Get.updateLocale(Locale('zh', 'CN'));\n```\n\n\n\n非常简单，这样，你只需要在不同地区配置不同文件即可。\n\n\n\n## 样式和布局\n\n样式和布局可以查看我项目代码中的demo，每一个样式文件都有命名标识，如果要运行查看，直接复制替换到main.dart进行运行查看即可，这里不多赘述，样式和布局多敲就可以。\n\n\n\n或者运行项目，点击查看对应的效果，结合代码进行查看。\n\n\n\n## 网络Api\n\n\n\n具体可以看我代码中的api部分\n\n\n\n# 真机测试\n\n## 安卓机型\n\n如果你使用安卓设备进行测试的话，仅需要开启`开发者模式`并将手机连接到电脑设备上选择传输文件即可\n\n## 苹果机型\n\n如果你是iOS设备的话，请仔细看以下步骤：\n\n**第一步，你需要描述文件和p12证书**，这两个东西你只能从开发者账号中去获取\n\n双击打开p12证书，这时候系统会弹出弹窗，请输入证书密码，并将证书放入登录（在弹窗的右下角有选项）\n\n第二步，打开Flutter项目，点击ios/Runner.xcworkspace文件，这个时候会自动打开Xcode，请你配置上对应的包名以及p12文件，没有出现红色警告说明配置成功，这个时候只需要点击左上角的运行命令即可。\n\n\n\n第三步，后续就可以直接在vscode中运行即可，可以不需要在xcode中打开。\n\n\n\n","slug":"Flutter","published":1,"date":"2023-10-28T16:02:21.204Z","updated":"2023-10-28T16:02:21.178Z","_id":"cloa86qb90000g7mo5sga2p1g","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Flutter\"><a href=\"#Flutter\" class=\"headerlink\" title=\"Flutter\"></a>Flutter</h1><p><strong>如果你直接安装flutter就不需要安装dart了，因为flutter已经包含了dart环境了</strong></p>\n<p>所以推荐直接安装flutter即可</p>\n<h2 id=\"安装dart\"><a href=\"#安装dart\" class=\"headerlink\" title=\"安装dart\"></a>安装dart</h2><p>首先你需要先安装homebrew，homebrew是一个软件资源包管理工具</p>\n<h3 id=\"安装homebrew\"><a href=\"#安装homebrew\" class=\"headerlink\" title=\"安装homebrew\"></a>安装homebrew</h3><h4 id=\"外网环境\"><a href=\"#外网环境\" class=\"headerlink\" title=\"外网环境\"></a>外网环境</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"推荐国内镜像\"><a href=\"#推荐国内镜像\" class=\"headerlink\" title=\"推荐国内镜像\"></a>推荐国内镜像</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c &quot;$(curl -fsSL https://gitee.com/wejectchan/brew/raw/master/install.sh)&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"安装dart-1\"><a href=\"#安装dart-1\" class=\"headerlink\" title=\"安装dart\"></a>安装dart</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap dart-lang/dart</span><br><span class=\"line\">brew install dart</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"安装Flutter\"><a href=\"#安装Flutter\" class=\"headerlink\" title=\"安装Flutter\"></a>安装Flutter</h2><p>苹果电脑芯片有两种，一种是intel芯片（X86），一种是M系列芯片（Arm）</p>\n<h3 id=\"查看系统芯片\"><a href=\"#查看系统芯片\" class=\"headerlink\" title=\"查看系统芯片\"></a>查看系统芯片</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -a</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意安装一定要根据系统芯片来安装</strong></p>\n<p>具体查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://flutter.cn/docs/get-started/install/macos</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第一步先下载对应系统版本的压缩包\"><a href=\"#第一步先下载对应系统版本的压缩包\" class=\"headerlink\" title=\"第一步先下载对应系统版本的压缩包\"></a><strong>第一步先下载对应系统版本的压缩包</strong></h4><h5 id=\"Intel芯片\"><a href=\"#Intel芯片\" class=\"headerlink\" title=\"Intel芯片\"></a>Intel芯片</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">intel：https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"M系列芯片\"><a href=\"#M系列芯片\" class=\"headerlink\" title=\"M系列芯片\"></a>M系列芯片</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.13.7-stable.zip</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第二步解压到某一个文件路径\"><a href=\"#第二步解压到某一个文件路径\" class=\"headerlink\" title=\"第二步解压到某一个文件路径\"></a><strong>第二步解压到某一个文件路径</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/development</span><br><span class=\"line\">unzip ~/Downloads/flutter_macos_3.13.7-stable.zip</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第三步配置环境变量\"><a href=\"#第三步配置环境变量\" class=\"headerlink\" title=\"第三步配置环境变量\"></a><strong>第三步配置环境变量</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&quot;$PATH: 文件路径/flutter/bin&quot;</span><br></pre></td></tr></table></figure>\n\n<p>这里需要注意，这样配置仅仅在当前命令窗生效，要永久生效则需要配置到shell文件中</p>\n<h5 id=\"永久配置具体看这里\"><a href=\"#永久配置具体看这里\" class=\"headerlink\" title=\"永久配置具体看这里\"></a><strong>永久配置具体看这里</strong></h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://flutter.cn/docs/get-started/install/macos#update-your-path</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开或者创建 shell 的 rc 文件，比如，在 Linux 和 macOS Mojave 或 Mojave 之前的系统里，是默认使用 Bash 的，所以需要修改 $HOME/.bashrc 文件。 macOS Catalina 操作系统默认使用 Z Shell，所以需要修改 $HOME/.zshrc 文件。请知晓，如果你使用不同的 shell，文件目录或文件名可能会有所不同。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">老旧的版本</span><br><span class=\"line\">vim ~/.bash_profile </span><br><span class=\"line\">或者open ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">最新版的系统都使用zshrc </span><br><span class=\"line\">vim ~/.zshrc </span><br><span class=\"line\">或者open ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=&quot;$PATH: 文件路径/flutter/bin&quot;</span><br><span class=\"line\">source $HOME/.bash_profile 来刷新当前命令行窗口。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过运行以下命令来验证 flutter/bin 文件夹是否已经添加到 PATH 环境变量中：</span><br><span class=\"line\"> echo $PATH</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">验证 flutter 命令是否可用，可以执行下面的命令检测：</span><br><span class=\"line\">which flutter</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"安装苹果模拟器\"><a href=\"#安装苹果模拟器\" class=\"headerlink\" title=\"安装苹果模拟器\"></a>安装苹果模拟器</h3><p>你只需要从应用商店下载Xcode进入之后会提示你下载模拟器，按要求下载即可</p>\n<p>不过通常会下载失败，因为模拟器镜像在国外，如果你有苹果开发者帐号可以通过抓取下载链接的形式去进行直接下载</p>\n<p>没有开发者帐号下载失败就多次重试，一般3到4次即可</p>\n<h2 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h2><p>可以使用vscode或者Xcode（苹果）||Android Studio（安卓）</p>\n<h2 id=\"推荐使用VScode\"><a href=\"#推荐使用VScode\" class=\"headerlink\" title=\"推荐使用VScode\"></a>推荐使用VScode</h2><p>使用vscode可以在扩展中搜索flutter相关扩展和dart，以便代码提示和自动导入文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dart</span><br><span class=\"line\"></span><br><span class=\"line\">Flutter</span><br><span class=\"line\"></span><br><span class=\"line\">Awesome Flutter Snippets</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h1><p>如果你有Xcode或者Android Studio，直接创建Flutter项目即可</p>\n<p>如果你是用vscode则需要使用命令行去进行创建</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter create flutter02</span><br><span class=\"line\">code .</span><br><span class=\"line\">flutter run</span><br><span class=\"line\">flutter devices //使用真机运行</span><br></pre></td></tr></table></figure>\n\n\n\n<p>最重要的就是<strong>lib文件夹</strong>以及<strong>pubspec.yaml</strong>文件，平台文件一般不需要理会</p>\n<p>我们编写代码都是在lib文件夹下进行编写</p>\n<p><img src=\"C:\\Users\\Administrator\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231012112958050.png\" alt=\"image-20231012112958050\"></p>\n<h1 id=\"使用第三方插件\"><a href=\"#使用第三方插件\" class=\"headerlink\" title=\"使用第三方插件\"></a>使用第三方插件</h1><p>  进入官方网站搜索插件（推荐使用加速器）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://pub.dev/</span><br></pre></td></tr></table></figure>\n\n<p>进入之后搜索所需插件的安装方式即可</p>\n<p><strong>这里的重点是安装之后运行到模拟器这一步可能会出现cocospods安装失败甚至安装之后无法使用的问题。</strong></p>\n<h2 id=\"cocospods安装问题\"><a href=\"#cocospods安装问题\" class=\"headerlink\" title=\"cocospods安装问题\"></a>cocospods安装问题</h2><p>首先你需要安装<code>homebrew</code>，这里前面有教程不再赘述</p>\n<p>第二步，检查ruby版本，输入命令<code>ruby -v</code>，这里m系列芯片的电脑默认是自带ruby的，但是版本过低，我们需要更新ruby</p>\n<p>使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install ruby</span><br></pre></td></tr></table></figure>\n\n<p>默认会下载最新的版本</p>\n<p>同时记得要去bash_profile编辑环境变量，否则可能会出现ruby系统版本没有改变的问题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/opt/homebrew/opt/ruby@3.2/bin:$PATH</span><br></pre></td></tr></table></figure>\n\n<p>查看ruby安装路径，可以在<code>/opt/homebrew/opt</code>目录中查看</p>\n<p>最关键的就是更新gem版本，这一步就会下载cocoapods</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gem update --system -n /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<p>可以通过查看命令判断cocoapods是否成功下载</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem list</span><br></pre></td></tr></table></figure>\n\n<p>如果出现cocoapods相关多个软件，说明安装成功</p>\n<p>输入命令：判断是否安装成功，如果成功，只会返回版本号，否则都算不成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod --version</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>如果输入pod –version出现报错，很可能是由于gem中的activeSupport版本有bug，这个时候你需要安装稳定版的activeSupport 7.0.8，有问题的版本就是7.1.0之后的版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gem install activesupport -v 7.0.8 </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gem uninstall activesupport -v 最新版</span><br></pre></td></tr></table></figure>\n\n<p>这样就可以使用第三方插件并运行在模拟器上面了。</p>\n<h1 id=\"Flutter-教程系列\"><a href=\"#Flutter-教程系列\" class=\"headerlink\" title=\"Flutter 教程系列\"></a>Flutter 教程系列</h1><p>与其说是教程，不如说是讲<strong>如何站在前端的角度</strong>去看待Flutter框架，推荐安装<code>Getx</code>配合使用，Flutter是一款轻量级的框架，很多额外的功能都使用插件来配合完成。</p>\n<p>GetX：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/jonataslaw/getx/blob/master/README.zh-cn.md</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>所以，你可以像这样安装我的依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies:</span><br><span class=\"line\">  fluttertoast: ^8.2.2</span><br><span class=\"line\">  get:</span><br><span class=\"line\">  dio: ^5.3.3</span><br><span class=\"line\">  webview_flutter: ^4.4.1</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLUTTER_STORAGE_BASE_URL ：https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure>\n\n<p>这样使用Flutter run命令可能会出现如下情况：</p>\n<p><code>Flutter assets will be downloaded from https://storage.flutter-io.cn. Make sure you trust this source!</code></p>\n<p>无需理会！</p>\n<h3 id=\"配置安卓gradle环境\"><a href=\"#配置安卓gradle环境\" class=\"headerlink\" title=\"配置安卓gradle环境\"></a>配置安卓gradle环境</h3><p>第一处：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    ext.kotlin_version = &#x27;1.7.10&#x27;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">    \t//看这里</span><br><span class=\"line\">        // google()</span><br><span class=\"line\">        // mavenCentral()</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/public&#x27; &#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/google&#x27; &#125;</span><br><span class=\"line\">        // maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;&#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/gradle-plugin&#x27;&#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath &#x27;com.android.tools.build:gradle:7.3.0&#x27;</span><br><span class=\"line\">        classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二处：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">    //看这里</span><br><span class=\"line\">        // google()</span><br><span class=\"line\">        // mavenCentral()</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/google&#x27; &#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/public&#x27; &#125;</span><br><span class=\"line\">        // maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;&#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/gradle-plugin&#x27;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置苹果环境变量\"><a href=\"#配置苹果环境变量\" class=\"headerlink\" title=\"配置苹果环境变量\"></a>配置苹果环境变量</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\">export path：flutter安装路径：PATH</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><p>原生Flutter有自己的路由方式</p>\n<h3 id=\"跳转到下一个页面\"><a href=\"#跳转到下一个页面\" class=\"headerlink\" title=\"跳转到下一个页面\"></a>跳转到下一个页面</h3><h4 id=\"第一种方式：（要传递参数直接放入即可）\"><a href=\"#第一种方式：（要传递参数直接放入即可）\" class=\"headerlink\" title=\"第一种方式：（要传递参数直接放入即可）\"></a><strong>第一种方式：（要传递参数直接放入即可）</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).push(MaterialPageRoute(builder: (context) &#123;</span><br><span class=\"line\">      //跳转并传参</span><br><span class=\"line\">      return const SearchPage(</span><br><span class=\"line\">         title: &#x27;你好&#x27;,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第二种方式：通过路由名称-也可以传递参数\"><a href=\"#第二种方式：通过路由名称-也可以传递参数\" class=\"headerlink\" title=\"第二种方式：通过路由名称,也可以传递参数\"></a><strong>第二种方式：通过路由名称,也可以传递参数</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).pushNamed(&quot;/pagebuilder&quot;,arguments: &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>注意，这种方式需要提前定义好<strong>路由栈</strong>和<strong>初始化路由</strong></p>\n<p>在main.dart中进行定义：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  MyApp(&#123;super.key&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &quot;Flutter Demo&quot;,</span><br><span class=\"line\">      //初始化路由</span><br><span class=\"line\">      initialRoute: &quot;/&quot;,</span><br><span class=\"line\">      //定义路由栈</span><br><span class=\"line\">       routes: router(context),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">router(context) &#123;</span><br><span class=\"line\">  return &#123;</span><br><span class=\"line\">    &quot;/pageanmation&quot;: (context) =&gt; const MyAnmationList(),</span><br><span class=\"line\">    &quot;/pagefull&quot;: (context) =&gt; const PageFullDemo(),</span><br><span class=\"line\">    &quot;/pagebuilder&quot;: (context) =&gt; const PageBuilderDemo(),</span><br><span class=\"line\">    &quot;/pageview&quot;: (context) =&gt; const MyPageView(),</span><br><span class=\"line\">    &quot;/dialog&quot;: (context) =&gt; const DialogPage(),</span><br><span class=\"line\">    &quot;/login&quot;: (context) =&gt; const LoginPage(),</span><br><span class=\"line\">    &quot;/register&quot;: (context) =&gt; const RegisterPage(),</span><br><span class=\"line\">    &quot;/search&quot;: (context) =&gt; const SearchPage(),</span><br><span class=\"line\">    &quot;/&quot;: (context) =&gt; const MyTabs(),</span><br><span class=\"line\">    &quot;/categroy&quot;: (context) =&gt; const CatrgroyPage()</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第三种方式-推荐使用Getx\"><a href=\"#第三种方式-推荐使用Getx\" class=\"headerlink\" title=\"第三种方式:推荐使用Getx\"></a><strong>第三种方式:推荐使用Getx</strong></h4><p>Getx拥有强大的统一的路由管理：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.toNamed(&quot;/search?hello=11111&quot;, arguments: &#123;&quot;msg&quot;: &quot;hello&quot;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Get.to(NextScreen());</span><br></pre></td></tr></table></figure>\n\n<p>在main.dart中这样配置：</p>\n<p><code>getPages</code>引入路由文件，使用<code>GetMaterialApp</code>强化MaterialApp</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引入路由</span><br><span class=\"line\">import &#x27;./router/index.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  MyApp(&#123;super.key&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return GetMaterialApp(</span><br><span class=\"line\">      //去除debug</span><br><span class=\"line\">      debugShowCheckedModeBanner: false,</span><br><span class=\"line\">      title: &quot;Flutter Demo&quot;,</span><br><span class=\"line\">      //初始化路由</span><br><span class=\"line\">      initialRoute: &quot;/&quot;,</span><br><span class=\"line\">      // 以后统一使用这种方式去管理路由</span><br><span class=\"line\">      getPages: AppPage.routes,</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>新建一个router文件夹统一管理</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\">//导入页面</span><br><span class=\"line\">import &#x27;../page/tabs.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/search.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/tabs/categroy.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/login.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/register.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/dialogdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/pageviewdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/pageviewbuilder.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/pageFulldemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/anmationListDemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/getxstatedemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/inputdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/webviewdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/i18ndemo.dart&#x27;;</span><br><span class=\"line\">//引入中间件</span><br><span class=\"line\">import &#x27;middleware/shopMiddleware.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class AppPage &#123;</span><br><span class=\"line\">  static final routes = [</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">      name: &quot;/&quot;,</span><br><span class=\"line\">      page: () =&gt; const MyTabs(),</span><br><span class=\"line\">      transition: Transition.leftToRight, //设置单个页面跳转的方式</span><br><span class=\"line\">      // middlewares: [MiddlePageVC()],//设置中间件(GetPage),可以根据优先级设置多个中间件</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pagefull&quot;,</span><br><span class=\"line\">        page: () =&gt; const PageFullDemo(),</span><br><span class=\"line\">        transition: Transition.rightToLeft, //设置单个页面跳转的方式</span><br><span class=\"line\">        middlewares: [shopMiddleware()]), //设置中间件(GetPage),可以根据优先级设置多个中间件</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pageanmation&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyAnmationList(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pagebuilder&quot;,</span><br><span class=\"line\">        page: () =&gt; const PageBuilderDemo(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pageview&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyPageView(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/dialog&quot;,</span><br><span class=\"line\">        page: () =&gt; const DialogPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/login&quot;,</span><br><span class=\"line\">        page: () =&gt; const LoginPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/register&quot;,</span><br><span class=\"line\">        page: () =&gt; const RegisterPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/search&quot;,</span><br><span class=\"line\">        page: () =&gt; const SearchPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/categroy&quot;,</span><br><span class=\"line\">        page: () =&gt; const CatrgroyPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/mygetx&quot;,</span><br><span class=\"line\">        page: () =&gt; MyGetXState(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/myinput&quot;,</span><br><span class=\"line\">        page: () =&gt; MyInputPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/mywebview&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyWebviewPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/myi18n&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyI18NPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最重要的是它可以每一个页面不同的跳转动画和方式以及中间件，非常适合企业级业务需求，例如跳转登录。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:flutter/cupertino.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class shopMiddleware extends GetMiddleware &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  RouteSettings? redirect(String? route) &#123;</span><br><span class=\"line\">    print(route);</span><br><span class=\"line\">    // return null;</span><br><span class=\"line\">    //没有权限跳转到登录页面</span><br><span class=\"line\">    return const RouteSettings(name: &quot;/login&quot;, arguments: &#123;&quot;msg&quot;: &quot;你还未登录！&quot;&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"获取数据\"><a href=\"#获取数据\" class=\"headerlink\" title=\"获取数据\"></a>获取数据</h3><p><strong>如果你使用Getx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.arguments</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.parameters</span><br></pre></td></tr></table></figure>\n\n<p><strong>如果不使用Getx，你需要提前定义对应的变量，注意把const移除掉，因为你已经不属于一个静态页面了</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">final String title;</span><br><span class=\"line\"></span><br><span class=\"line\">  SearchPage(&#123;Key? key, required this.title&#125;) : super(key: key);</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  //使用</span><br><span class=\"line\">  (title: Text(widget.title)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"返回上一个页面\"><a href=\"#返回上一个页面\" class=\"headerlink\" title=\"返回上一个页面\"></a>返回上一个页面</h3><h4 id=\"第一种方式\"><a href=\"#第一种方式\" class=\"headerlink\" title=\"第一种方式\"></a>第一种方式</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.pop(context)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).pop(&quot;好的&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">//直接跳转到message页面，这种跳转方式相当于redirect，会删除前面一个页面</span><br><span class=\"line\">Navigator.of(context).pushAndRemoveUntil(</span><br><span class=\"line\">     MaterialPageRoute(builder: (context) &#123;</span><br><span class=\"line\">                  return const MessagePage();</span><br><span class=\"line\">                &#125;), (route) =&gt; false);</span><br><span class=\"line\">                </span><br><span class=\"line\">//使用替换路由跳转，相当于干掉前一个页面</span><br><span class=\"line\">Navigator.of(context).pushReplacementNamed(&quot;/home&quot;)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第三种方式（Getx推荐）\"><a href=\"#第三种方式（Getx推荐）\" class=\"headerlink\" title=\"第三种方式（Getx推荐）\"></a>第三种方式（Getx推荐）</h4><p>要关闭snackbars, dialogs, bottomsheets或任何你通常会用Navigator.pop(context)关闭的东西。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.back();</span><br></pre></td></tr></table></figure>\n\n<p>进入下一个页面，但<strong>没有返回上一个页面的选项</strong>（用于闪屏页，登录页面等）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.off(NextScreen());</span><br></pre></td></tr></table></figure>\n\n<p>进入下一个页面并<strong>取消之前的所有路由</strong>（在购物车、投票和测试中很有用）</p>\n<p>如果你熟悉uniapp的话，这个相当于redirect</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.offAll(NextScreen());</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"状态管理\"><a href=\"#状态管理\" class=\"headerlink\" title=\"状态管理\"></a>状态管理</h2><p><strong>注意：这里仅仅站在前端的角度去做</strong></p>\n<p>这里仅使用Getx进行状态管理，如果你熟悉前端的话，这一步相当于vue的vuex，react的redux。</p>\n<p>新建一个store文件夹</p>\n<p>index.dart，这是一个统一管理所有状态的文件，</p>\n<p>Get.put方法运行放入一个控制器，这个控制器你可以把它当成一个全局的公共变量，放入之后Getx会进行内部的管理和追踪</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//类似于vuex</span><br><span class=\"line\"></span><br><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">import &#x27;./user.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">//统一管理所有的store</span><br><span class=\"line\">class Store &#123;</span><br><span class=\"line\">  static final Store _instance = Store._internal();</span><br><span class=\"line\"></span><br><span class=\"line\">  factory Store() &#123;</span><br><span class=\"line\">    return _instance;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  //将所有的store都放入这里</span><br><span class=\"line\">  Store._internal() &#123;</span><br><span class=\"line\">    Get.put(UserController());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过继承GetxController使其变成一个可以追踪的控制器，并暴露出<strong>响应式变量和函数</strong>，这一步相当于暴露出所有的<strong>state</strong>，函数就是用来改变state的函数，相当于<strong>mutation</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class UserController extends GetxController &#123;</span><br><span class=\"line\">  //这里定义变量</span><br><span class=\"line\">  RxInt count = 0.obs;</span><br><span class=\"line\"></span><br><span class=\"line\">  //重置函数</span><br><span class=\"line\">  void reset() &#123;</span><br><span class=\"line\">    count.value = 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //这里定义函数</span><br><span class=\"line\">  void increment() &#123;</span><br><span class=\"line\">    count.value++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最后，在main.dart进行引入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;./store/index.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() &#123;</span><br><span class=\"line\">  Store(); // 初始化Store实例</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这样，你就可以在App所有的页面拿到这些数据了，如何获取呢，</p>\n<p>既然有put的操作，就有find的操作</p>\n<p>Get.find函数非常强大，他能找到对应的控制器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">final UserController userController = Get.find&lt;UserController&gt;();</span><br></pre></td></tr></table></figure>\n\n<p>所有的数据就在userController中：</p>\n<p>注意：为了改变数据能够响应式的变化布局，因此，你需要使用Obx函数对响应式数据进行追踪，相当于<strong>前端的观察者模式</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">import &#x27;../../store/user.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class CatrgroyPage extends StatefulWidget &#123;</span><br><span class=\"line\">  const CatrgroyPage(&#123;super.key&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;CatrgroyPage&gt; createState() =&gt; _CatrgroyPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _CatrgroyPageState extends State&lt;CatrgroyPage&gt; &#123;</span><br><span class=\"line\">  //通过Get.find获取同一个控制器实例，可以使用数据,注意，只有先put控制器，才能find，否则会报错</span><br><span class=\"line\">  final UserController userController = Get.find&lt;UserController&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Center(</span><br><span class=\"line\">      child: Column(children: [</span><br><span class=\"line\">        Obx(() =&gt; Text(&#x27;分类当前store里面的数值: $&#123;userController.count.value&#125;&#x27;)),</span><br><span class=\"line\">        ElevatedButton(</span><br><span class=\"line\">            onPressed: () &#123;</span><br><span class=\"line\">              //不建议这么改，这样会导致数据的改变无法追踪，尽量调用方法去使用</span><br><span class=\"line\">              // userfind.count.value = 10;</span><br><span class=\"line\">              //建议这么修改</span><br><span class=\"line\">              userController.reset();</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            child: const Text(&quot;重置&quot;))</span><br><span class=\"line\">      ]),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>看到这里，如果你是一名前端，你可以简单的把它理解成，通过定义一个函数，把函数放入Getx（put）中，Getx就可以自动帮你管理，要使用就拿出来（find），同时数据的改变要引起页面的重新渲染，需要使用观察者（Obx）通知Getx对页面进行改变，是不是有vue的双向绑定的意思了。</p>\n<p><strong>如果你不使用Getx，但是你的数据改变没有引起页面的变化，你需要看看是否使用了setState函数，这跟React的思路是一样的，如果你了解React，你就明白什么意思了。</strong></p>\n<h2 id=\"Webview\"><a href=\"#Webview\" class=\"headerlink\" title=\"Webview\"></a>Webview</h2><p>这里使用Webiew_Flutter插件来实现，这是官方提供的webview插件</p>\n<p>这里仅使用于安卓或苹果移动端设备，不适用于web</p>\n<h3 id=\"下载依赖\"><a href=\"#下载依赖\" class=\"headerlink\" title=\"下载依赖\"></a>下载依赖</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webview_flutter: ^4.4.1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开启权限\"><a href=\"#开启权限\" class=\"headerlink\" title=\"开启权限\"></a>开启权限</h3><p>安卓需要开启网络权限，默认是开启的</p>\n<p>苹果需要配置ios&#x2F;Runner&#x2F;info.plist文件，加上这个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 使ios运行运行webview --&gt;</span><br><span class=\"line\">\t&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;</span><br><span class=\"line\">   &lt;string&gt;YES&lt;/string&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p><strong>第一步，先声明一个weviewController</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">late WebViewController controller;</span><br></pre></td></tr></table></figure>\n\n<p><strong>第二步，在 initState 中初始化 controller</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void initState() &#123;</span><br><span class=\"line\">  //第二步，在 initState 中初始化 controller</span><br><span class=\"line\">  controller = WebViewController()</span><br><span class=\"line\">     //默认是不开启的，手动开启支持js</span><br><span class=\"line\">    ..setJavaScriptMode(JavaScriptMode.unrestricted)</span><br><span class=\"line\">   ..loadRequest(Uri.parse(&#x27;https://www.csdn.net/&#x27;), headers: &#123;&#125;)</span><br><span class=\"line\">  super.initState();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>第三步，使用WebViewWidget,使用sizebox可以控制大小</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     SizedBox(</span><br><span class=\"line\">         height: 400,</span><br><span class=\"line\">         child: WebViewWidget(</span><br><span class=\"line\">             //控制器</span><br><span class=\"line\">             controller: controller,</span><br><span class=\"line\">)),</span><br></pre></td></tr></table></figure>\n\n<p>这样就大功告成了，你就可以在页面上面看到webview页面了</p>\n<p>手势操作，在WebViewWidget配置第二个参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//手势操作</span><br><span class=\"line\">gestureRecognizers: &#123;</span><br><span class=\"line\">  Factory&lt;VerticalDragGestureRecognizer&gt;(</span><br><span class=\"line\">    () &#123;</span><br><span class=\"line\">      return VerticalDragGestureRecognizer()</span><br><span class=\"line\">        ..onStart = (DragStartDetails details) &#123;</span><br><span class=\"line\">          print(&quot;start&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ..onDown = (DragDownDetails details) &#123;</span><br><span class=\"line\">          print(&quot;down: $details&quot;);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>设置UA</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">..setUserAgent(</span><br><span class=\"line\">         // &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36&quot;</span><br><span class=\"line\">         &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36&quot;)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>路由操作：这个非常种要，可以追踪链接变化，注入JS，拦截等操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">..setNavigationDelegate(NavigationDelegate(</span><br><span class=\"line\">  //   //页面开始请求,获取页面请求</span><br><span class=\"line\">  onNavigationRequest: (requset) &#123;</span><br><span class=\"line\">    print(&quot;页面请求参数 $&#123;requset.url&#125;&quot;);</span><br><span class=\"line\">    return NavigationDecision.navigate;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  //   //页面开始加载</span><br><span class=\"line\">  //   onPageStarted: (url) &#123;&#125;,</span><br><span class=\"line\">  //页面加载完毕,注入js,既使 WebView 加载的页面中可能还有链接，跳到另一个地址，js 注入的代码依然有效！</span><br><span class=\"line\">  onPageFinished: (url) async &#123;</span><br><span class=\"line\">    var cookie = await controller</span><br><span class=\"line\">        .runJavaScriptReturningResult(&#x27;document.cookie&#x27;) as String;</span><br><span class=\"line\"></span><br><span class=\"line\">    var ua = await controller</span><br><span class=\"line\">        .runJavaScriptReturningResult(&#x27;navigator.userAgent;&#x27;) as String;</span><br><span class=\"line\">    print(&quot;当前页面的cookie：$cookie,当前的ua是 $ua&quot;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  //   //加载错误</span><br><span class=\"line\">  //   onWebResourceError: (error) &#123;</span><br><span class=\"line\">  //     print(error);</span><br><span class=\"line\">  //   &#125;,</span><br><span class=\"line\">));</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a>国际化</h2><p>使用Getx进行国际化配置非常简单，这里站在前端角度去进行配置</p>\n<p>建立一个i18n文件夹，统一管理在index</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\">import &#x27;./zh_CN.dart&#x27;;</span><br><span class=\"line\">import &#x27;./en_US.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class Messages extends Translations &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; &#123;</span><br><span class=\"line\">        ...ZhCN().keys,</span><br><span class=\"line\">        ...EnUS().keys,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>en_US</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class EnUS extends Translations &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; &#123;</span><br><span class=\"line\">        &#x27;en_US&#x27;: &#123;</span><br><span class=\"line\">          &#x27;hello&#x27;: &#x27;hello world&#x27;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>zh_CN</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class ZhCN extends Translations &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; &#123;</span><br><span class=\"line\">        &#x27;zh_CN&#x27;: &#123;</span><br><span class=\"line\">          &#x27;hello&#x27;: &#x27;你好 世界&#x27;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在main.dart进行配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;i18n/index.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@override</span><br><span class=\"line\"> Widget build(BuildContext context) &#123;</span><br><span class=\"line\">   return GetMaterialApp(</span><br><span class=\"line\">     //去除debug</span><br><span class=\"line\">     debugShowCheckedModeBanner: false,</span><br><span class=\"line\">     title: &quot;Flutter Demo&quot;,</span><br><span class=\"line\">     //初始化路由</span><br><span class=\"line\">     initialRoute: &quot;/&quot;,</span><br><span class=\"line\">     //命名路由</span><br><span class=\"line\">     // routes: router(context),</span><br><span class=\"line\">     // 以后统一使用这种方式去管理路由</span><br><span class=\"line\">     getPages: AppPage.routes,</span><br><span class=\"line\">     translations: Messages(), // 你的翻译</span><br><span class=\"line\">     locale: Locale(&#x27;zh&#x27;, &#x27;CN&#x27;), // 将会按照此处指定的语言翻译</span><br><span class=\"line\">     fallbackLocale: Locale(&#x27;en&#x27;, &#x27;US&#x27;), // 添加一个回调语言选项，以备上面指定的语言翻译不存在</span><br><span class=\"line\">     // locale: ui.window.locale,  //读取系统语言</span><br><span class=\"line\">   );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text(&#x27;hello&#x27;.tr)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>改变语言</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.updateLocale(Locale(&#x27;en&#x27;, &#x27;US&#x27;))；</span><br><span class=\"line\">Get.updateLocale(Locale(&#x27;zh&#x27;, &#x27;CN&#x27;));</span><br></pre></td></tr></table></figure>\n\n\n\n<p>非常简单，这样，你只需要在不同地区配置不同文件即可。</p>\n<h2 id=\"样式和布局\"><a href=\"#样式和布局\" class=\"headerlink\" title=\"样式和布局\"></a>样式和布局</h2><p>样式和布局可以查看我项目代码中的demo，每一个样式文件都有命名标识，如果要运行查看，直接复制替换到main.dart进行运行查看即可，这里不多赘述，样式和布局多敲就可以。</p>\n<p>或者运行项目，点击查看对应的效果，结合代码进行查看。</p>\n<h2 id=\"网络Api\"><a href=\"#网络Api\" class=\"headerlink\" title=\"网络Api\"></a>网络Api</h2><p>具体可以看我代码中的api部分</p>\n<h1 id=\"真机测试\"><a href=\"#真机测试\" class=\"headerlink\" title=\"真机测试\"></a>真机测试</h1><h2 id=\"安卓机型\"><a href=\"#安卓机型\" class=\"headerlink\" title=\"安卓机型\"></a>安卓机型</h2><p>如果你使用安卓设备进行测试的话，仅需要开启<code>开发者模式</code>并将手机连接到电脑设备上选择传输文件即可</p>\n<h2 id=\"苹果机型\"><a href=\"#苹果机型\" class=\"headerlink\" title=\"苹果机型\"></a>苹果机型</h2><p>如果你是iOS设备的话，请仔细看以下步骤：</p>\n<p><strong>第一步，你需要描述文件和p12证书</strong>，这两个东西你只能从开发者账号中去获取</p>\n<p>双击打开p12证书，这时候系统会弹出弹窗，请输入证书密码，并将证书放入登录（在弹窗的右下角有选项）</p>\n<p>第二步，打开Flutter项目，点击ios&#x2F;Runner.xcworkspace文件，这个时候会自动打开Xcode，请你配置上对应的包名以及p12文件，没有出现红色警告说明配置成功，这个时候只需要点击左上角的运行命令即可。</p>\n<p>第三步，后续就可以直接在vscode中运行即可，可以不需要在xcode中打开。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Flutter\"><a href=\"#Flutter\" class=\"headerlink\" title=\"Flutter\"></a>Flutter</h1><p><strong>如果你直接安装flutter就不需要安装dart了，因为flutter已经包含了dart环境了</strong></p>\n<p>所以推荐直接安装flutter即可</p>\n<h2 id=\"安装dart\"><a href=\"#安装dart\" class=\"headerlink\" title=\"安装dart\"></a>安装dart</h2><p>首先你需要先安装homebrew，homebrew是一个软件资源包管理工具</p>\n<h3 id=\"安装homebrew\"><a href=\"#安装homebrew\" class=\"headerlink\" title=\"安装homebrew\"></a>安装homebrew</h3><h4 id=\"外网环境\"><a href=\"#外网环境\" class=\"headerlink\" title=\"外网环境\"></a>外网环境</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"推荐国内镜像\"><a href=\"#推荐国内镜像\" class=\"headerlink\" title=\"推荐国内镜像\"></a>推荐国内镜像</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c &quot;$(curl -fsSL https://gitee.com/wejectchan/brew/raw/master/install.sh)&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"安装dart-1\"><a href=\"#安装dart-1\" class=\"headerlink\" title=\"安装dart\"></a>安装dart</h3><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew tap dart-lang/dart</span><br><span class=\"line\">brew install dart</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"安装Flutter\"><a href=\"#安装Flutter\" class=\"headerlink\" title=\"安装Flutter\"></a>安装Flutter</h2><p>苹果电脑芯片有两种，一种是intel芯片（X86），一种是M系列芯片（Arm）</p>\n<h3 id=\"查看系统芯片\"><a href=\"#查看系统芯片\" class=\"headerlink\" title=\"查看系统芯片\"></a>查看系统芯片</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -a</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意安装一定要根据系统芯片来安装</strong></p>\n<p>具体查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://flutter.cn/docs/get-started/install/macos</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第一步先下载对应系统版本的压缩包\"><a href=\"#第一步先下载对应系统版本的压缩包\" class=\"headerlink\" title=\"第一步先下载对应系统版本的压缩包\"></a><strong>第一步先下载对应系统版本的压缩包</strong></h4><h5 id=\"Intel芯片\"><a href=\"#Intel芯片\" class=\"headerlink\" title=\"Intel芯片\"></a>Intel芯片</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">intel：https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip</span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"M系列芯片\"><a href=\"#M系列芯片\" class=\"headerlink\" title=\"M系列芯片\"></a>M系列芯片</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://storage.flutter-io.cn/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.13.7-stable.zip</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第二步解压到某一个文件路径\"><a href=\"#第二步解压到某一个文件路径\" class=\"headerlink\" title=\"第二步解压到某一个文件路径\"></a><strong>第二步解压到某一个文件路径</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/development</span><br><span class=\"line\">unzip ~/Downloads/flutter_macos_3.13.7-stable.zip</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第三步配置环境变量\"><a href=\"#第三步配置环境变量\" class=\"headerlink\" title=\"第三步配置环境变量\"></a><strong>第三步配置环境变量</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=&quot;$PATH: 文件路径/flutter/bin&quot;</span><br></pre></td></tr></table></figure>\n\n<p>这里需要注意，这样配置仅仅在当前命令窗生效，要永久生效则需要配置到shell文件中</p>\n<h5 id=\"永久配置具体看这里\"><a href=\"#永久配置具体看这里\" class=\"headerlink\" title=\"永久配置具体看这里\"></a><strong>永久配置具体看这里</strong></h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://flutter.cn/docs/get-started/install/macos#update-your-path</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开或者创建 shell 的 rc 文件，比如，在 Linux 和 macOS Mojave 或 Mojave 之前的系统里，是默认使用 Bash 的，所以需要修改 $HOME/.bashrc 文件。 macOS Catalina 操作系统默认使用 Z Shell，所以需要修改 $HOME/.zshrc 文件。请知晓，如果你使用不同的 shell，文件目录或文件名可能会有所不同。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">老旧的版本</span><br><span class=\"line\">vim ~/.bash_profile </span><br><span class=\"line\">或者open ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">最新版的系统都使用zshrc </span><br><span class=\"line\">vim ~/.zshrc </span><br><span class=\"line\">或者open ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=&quot;$PATH: 文件路径/flutter/bin&quot;</span><br><span class=\"line\">source $HOME/.bash_profile 来刷新当前命令行窗口。</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过运行以下命令来验证 flutter/bin 文件夹是否已经添加到 PATH 环境变量中：</span><br><span class=\"line\"> echo $PATH</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">验证 flutter 命令是否可用，可以执行下面的命令检测：</span><br><span class=\"line\">which flutter</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"安装苹果模拟器\"><a href=\"#安装苹果模拟器\" class=\"headerlink\" title=\"安装苹果模拟器\"></a>安装苹果模拟器</h3><p>你只需要从应用商店下载Xcode进入之后会提示你下载模拟器，按要求下载即可</p>\n<p>不过通常会下载失败，因为模拟器镜像在国外，如果你有苹果开发者帐号可以通过抓取下载链接的形式去进行直接下载</p>\n<p>没有开发者帐号下载失败就多次重试，一般3到4次即可</p>\n<h2 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h2><p>可以使用vscode或者Xcode（苹果）||Android Studio（安卓）</p>\n<h2 id=\"推荐使用VScode\"><a href=\"#推荐使用VScode\" class=\"headerlink\" title=\"推荐使用VScode\"></a>推荐使用VScode</h2><p>使用vscode可以在扩展中搜索flutter相关扩展和dart，以便代码提示和自动导入文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dart</span><br><span class=\"line\"></span><br><span class=\"line\">Flutter</span><br><span class=\"line\"></span><br><span class=\"line\">Awesome Flutter Snippets</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h1><p>如果你有Xcode或者Android Studio，直接创建Flutter项目即可</p>\n<p>如果你是用vscode则需要使用命令行去进行创建</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flutter create flutter02</span><br><span class=\"line\">code .</span><br><span class=\"line\">flutter run</span><br><span class=\"line\">flutter devices //使用真机运行</span><br></pre></td></tr></table></figure>\n\n\n\n<p>最重要的就是<strong>lib文件夹</strong>以及<strong>pubspec.yaml</strong>文件，平台文件一般不需要理会</p>\n<p>我们编写代码都是在lib文件夹下进行编写</p>\n<p><img src=\"C:\\Users\\Administrator\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231012112958050.png\" alt=\"image-20231012112958050\"></p>\n<h1 id=\"使用第三方插件\"><a href=\"#使用第三方插件\" class=\"headerlink\" title=\"使用第三方插件\"></a>使用第三方插件</h1><p>  进入官方网站搜索插件（推荐使用加速器）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://pub.dev/</span><br></pre></td></tr></table></figure>\n\n<p>进入之后搜索所需插件的安装方式即可</p>\n<p><strong>这里的重点是安装之后运行到模拟器这一步可能会出现cocospods安装失败甚至安装之后无法使用的问题。</strong></p>\n<h2 id=\"cocospods安装问题\"><a href=\"#cocospods安装问题\" class=\"headerlink\" title=\"cocospods安装问题\"></a>cocospods安装问题</h2><p>首先你需要安装<code>homebrew</code>，这里前面有教程不再赘述</p>\n<p>第二步，检查ruby版本，输入命令<code>ruby -v</code>，这里m系列芯片的电脑默认是自带ruby的，但是版本过低，我们需要更新ruby</p>\n<p>使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install ruby</span><br></pre></td></tr></table></figure>\n\n<p>默认会下载最新的版本</p>\n<p>同时记得要去bash_profile编辑环境变量，否则可能会出现ruby系统版本没有改变的问题</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/opt/homebrew/opt/ruby@3.2/bin:$PATH</span><br></pre></td></tr></table></figure>\n\n<p>查看ruby安装路径，可以在<code>/opt/homebrew/opt</code>目录中查看</p>\n<p>最关键的就是更新gem版本，这一步就会下载cocoapods</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gem update --system -n /usr/local/bin</span><br></pre></td></tr></table></figure>\n\n<p>可以通过查看命令判断cocoapods是否成功下载</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem list</span><br></pre></td></tr></table></figure>\n\n<p>如果出现cocoapods相关多个软件，说明安装成功</p>\n<p>输入命令：判断是否安装成功，如果成功，只会返回版本号，否则都算不成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pod --version</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>如果输入pod –version出现报错，很可能是由于gem中的activeSupport版本有bug，这个时候你需要安装稳定版的activeSupport 7.0.8，有问题的版本就是7.1.0之后的版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gem install activesupport -v 7.0.8 </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gem uninstall activesupport -v 最新版</span><br></pre></td></tr></table></figure>\n\n<p>这样就可以使用第三方插件并运行在模拟器上面了。</p>\n<h1 id=\"Flutter-教程系列\"><a href=\"#Flutter-教程系列\" class=\"headerlink\" title=\"Flutter 教程系列\"></a>Flutter 教程系列</h1><p>与其说是教程，不如说是讲<strong>如何站在前端的角度</strong>去看待Flutter框架，推荐安装<code>Getx</code>配合使用，Flutter是一款轻量级的框架，很多额外的功能都使用插件来配合完成。</p>\n<p>GetX：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/jonataslaw/getx/blob/master/README.zh-cn.md</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>所以，你可以像这样安装我的依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies:</span><br><span class=\"line\">  fluttertoast: ^8.2.2</span><br><span class=\"line\">  get:</span><br><span class=\"line\">  dio: ^5.3.3</span><br><span class=\"line\">  webview_flutter: ^4.4.1</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLUTTER_STORAGE_BASE_URL ：https://storage.flutter-io.cn</span><br></pre></td></tr></table></figure>\n\n<p>这样使用Flutter run命令可能会出现如下情况：</p>\n<p><code>Flutter assets will be downloaded from https://storage.flutter-io.cn. Make sure you trust this source!</code></p>\n<p>无需理会！</p>\n<h3 id=\"配置安卓gradle环境\"><a href=\"#配置安卓gradle环境\" class=\"headerlink\" title=\"配置安卓gradle环境\"></a>配置安卓gradle环境</h3><p>第一处：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    ext.kotlin_version = &#x27;1.7.10&#x27;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">    \t//看这里</span><br><span class=\"line\">        // google()</span><br><span class=\"line\">        // mavenCentral()</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/public&#x27; &#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/google&#x27; &#125;</span><br><span class=\"line\">        // maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;&#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/gradle-plugin&#x27;&#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath &#x27;com.android.tools.build:gradle:7.3.0&#x27;</span><br><span class=\"line\">        classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二处：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">    //看这里</span><br><span class=\"line\">        // google()</span><br><span class=\"line\">        // mavenCentral()</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/google&#x27; &#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/public&#x27; &#125;</span><br><span class=\"line\">        // maven &#123; url &#x27;http://maven.aliyun.com/nexus/content/groups/public&#x27;&#125;</span><br><span class=\"line\">        maven &#123; url &#x27;https://maven.aliyun.com/repository/gradle-plugin&#x27;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置苹果环境变量\"><a href=\"#配置苹果环境变量\" class=\"headerlink\" title=\"配置苹果环境变量\"></a>配置苹果环境变量</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\">export path：flutter安装路径：PATH</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h2><p>原生Flutter有自己的路由方式</p>\n<h3 id=\"跳转到下一个页面\"><a href=\"#跳转到下一个页面\" class=\"headerlink\" title=\"跳转到下一个页面\"></a>跳转到下一个页面</h3><h4 id=\"第一种方式：（要传递参数直接放入即可）\"><a href=\"#第一种方式：（要传递参数直接放入即可）\" class=\"headerlink\" title=\"第一种方式：（要传递参数直接放入即可）\"></a><strong>第一种方式：（要传递参数直接放入即可）</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).push(MaterialPageRoute(builder: (context) &#123;</span><br><span class=\"line\">      //跳转并传参</span><br><span class=\"line\">      return const SearchPage(</span><br><span class=\"line\">         title: &#x27;你好&#x27;,</span><br><span class=\"line\">        );</span><br><span class=\"line\">      &#125;))</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第二种方式：通过路由名称-也可以传递参数\"><a href=\"#第二种方式：通过路由名称-也可以传递参数\" class=\"headerlink\" title=\"第二种方式：通过路由名称,也可以传递参数\"></a><strong>第二种方式：通过路由名称,也可以传递参数</strong></h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).pushNamed(&quot;/pagebuilder&quot;,arguments: &#123;&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>注意，这种方式需要提前定义好<strong>路由栈</strong>和<strong>初始化路由</strong></p>\n<p>在main.dart中进行定义：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  MyApp(&#123;super.key&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      title: &quot;Flutter Demo&quot;,</span><br><span class=\"line\">      //初始化路由</span><br><span class=\"line\">      initialRoute: &quot;/&quot;,</span><br><span class=\"line\">      //定义路由栈</span><br><span class=\"line\">       routes: router(context),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">router(context) &#123;</span><br><span class=\"line\">  return &#123;</span><br><span class=\"line\">    &quot;/pageanmation&quot;: (context) =&gt; const MyAnmationList(),</span><br><span class=\"line\">    &quot;/pagefull&quot;: (context) =&gt; const PageFullDemo(),</span><br><span class=\"line\">    &quot;/pagebuilder&quot;: (context) =&gt; const PageBuilderDemo(),</span><br><span class=\"line\">    &quot;/pageview&quot;: (context) =&gt; const MyPageView(),</span><br><span class=\"line\">    &quot;/dialog&quot;: (context) =&gt; const DialogPage(),</span><br><span class=\"line\">    &quot;/login&quot;: (context) =&gt; const LoginPage(),</span><br><span class=\"line\">    &quot;/register&quot;: (context) =&gt; const RegisterPage(),</span><br><span class=\"line\">    &quot;/search&quot;: (context) =&gt; const SearchPage(),</span><br><span class=\"line\">    &quot;/&quot;: (context) =&gt; const MyTabs(),</span><br><span class=\"line\">    &quot;/categroy&quot;: (context) =&gt; const CatrgroyPage()</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第三种方式-推荐使用Getx\"><a href=\"#第三种方式-推荐使用Getx\" class=\"headerlink\" title=\"第三种方式:推荐使用Getx\"></a><strong>第三种方式:推荐使用Getx</strong></h4><p>Getx拥有强大的统一的路由管理：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.toNamed(&quot;/search?hello=11111&quot;, arguments: &#123;&quot;msg&quot;: &quot;hello&quot;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Get.to(NextScreen());</span><br></pre></td></tr></table></figure>\n\n<p>在main.dart中这样配置：</p>\n<p><code>getPages</code>引入路由文件，使用<code>GetMaterialApp</code>强化MaterialApp</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引入路由</span><br><span class=\"line\">import &#x27;./router/index.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  MyApp(&#123;super.key&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return GetMaterialApp(</span><br><span class=\"line\">      //去除debug</span><br><span class=\"line\">      debugShowCheckedModeBanner: false,</span><br><span class=\"line\">      title: &quot;Flutter Demo&quot;,</span><br><span class=\"line\">      //初始化路由</span><br><span class=\"line\">      initialRoute: &quot;/&quot;,</span><br><span class=\"line\">      // 以后统一使用这种方式去管理路由</span><br><span class=\"line\">      getPages: AppPage.routes,</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>新建一个router文件夹统一管理</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\">//导入页面</span><br><span class=\"line\">import &#x27;../page/tabs.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/search.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/tabs/categroy.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/login.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/register.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/dialogdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/pageviewdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/pageviewbuilder.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/pageFulldemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/anmationListDemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/getxstatedemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/inputdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/webviewdemo.dart&#x27;;</span><br><span class=\"line\">import &#x27;../page/i18ndemo.dart&#x27;;</span><br><span class=\"line\">//引入中间件</span><br><span class=\"line\">import &#x27;middleware/shopMiddleware.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class AppPage &#123;</span><br><span class=\"line\">  static final routes = [</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">      name: &quot;/&quot;,</span><br><span class=\"line\">      page: () =&gt; const MyTabs(),</span><br><span class=\"line\">      transition: Transition.leftToRight, //设置单个页面跳转的方式</span><br><span class=\"line\">      // middlewares: [MiddlePageVC()],//设置中间件(GetPage),可以根据优先级设置多个中间件</span><br><span class=\"line\">    ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pagefull&quot;,</span><br><span class=\"line\">        page: () =&gt; const PageFullDemo(),</span><br><span class=\"line\">        transition: Transition.rightToLeft, //设置单个页面跳转的方式</span><br><span class=\"line\">        middlewares: [shopMiddleware()]), //设置中间件(GetPage),可以根据优先级设置多个中间件</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pageanmation&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyAnmationList(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pagebuilder&quot;,</span><br><span class=\"line\">        page: () =&gt; const PageBuilderDemo(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/pageview&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyPageView(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/dialog&quot;,</span><br><span class=\"line\">        page: () =&gt; const DialogPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/login&quot;,</span><br><span class=\"line\">        page: () =&gt; const LoginPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/register&quot;,</span><br><span class=\"line\">        page: () =&gt; const RegisterPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/search&quot;,</span><br><span class=\"line\">        page: () =&gt; const SearchPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/categroy&quot;,</span><br><span class=\"line\">        page: () =&gt; const CatrgroyPage(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/mygetx&quot;,</span><br><span class=\"line\">        page: () =&gt; MyGetXState(),</span><br><span class=\"line\">        transition: Transition.leftToRight //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/myinput&quot;,</span><br><span class=\"line\">        page: () =&gt; MyInputPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/mywebview&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyWebviewPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">    GetPage(</span><br><span class=\"line\">        name: &quot;/myi18n&quot;,</span><br><span class=\"line\">        page: () =&gt; const MyI18NPage(),</span><br><span class=\"line\">        transition: Transition.rightToLeft //设置单个页面跳转的方式</span><br><span class=\"line\">        ),</span><br><span class=\"line\">  ];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最重要的是它可以每一个页面不同的跳转动画和方式以及中间件，非常适合企业级业务需求，例如跳转登录。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:flutter/cupertino.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class shopMiddleware extends GetMiddleware &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  RouteSettings? redirect(String? route) &#123;</span><br><span class=\"line\">    print(route);</span><br><span class=\"line\">    // return null;</span><br><span class=\"line\">    //没有权限跳转到登录页面</span><br><span class=\"line\">    return const RouteSettings(name: &quot;/login&quot;, arguments: &#123;&quot;msg&quot;: &quot;你还未登录！&quot;&#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"获取数据\"><a href=\"#获取数据\" class=\"headerlink\" title=\"获取数据\"></a>获取数据</h3><p><strong>如果你使用Getx</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.arguments</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.parameters</span><br></pre></td></tr></table></figure>\n\n<p><strong>如果不使用Getx，你需要提前定义对应的变量，注意把const移除掉，因为你已经不属于一个静态页面了</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">final String title;</span><br><span class=\"line\"></span><br><span class=\"line\">  SearchPage(&#123;Key? key, required this.title&#125;) : super(key: key);</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  //使用</span><br><span class=\"line\">  (title: Text(widget.title)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"返回上一个页面\"><a href=\"#返回上一个页面\" class=\"headerlink\" title=\"返回上一个页面\"></a>返回上一个页面</h3><h4 id=\"第一种方式\"><a href=\"#第一种方式\" class=\"headerlink\" title=\"第一种方式\"></a>第一种方式</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.pop(context)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).pop(&quot;好的&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">//直接跳转到message页面，这种跳转方式相当于redirect，会删除前面一个页面</span><br><span class=\"line\">Navigator.of(context).pushAndRemoveUntil(</span><br><span class=\"line\">     MaterialPageRoute(builder: (context) &#123;</span><br><span class=\"line\">                  return const MessagePage();</span><br><span class=\"line\">                &#125;), (route) =&gt; false);</span><br><span class=\"line\">                </span><br><span class=\"line\">//使用替换路由跳转，相当于干掉前一个页面</span><br><span class=\"line\">Navigator.of(context).pushReplacementNamed(&quot;/home&quot;)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"第三种方式（Getx推荐）\"><a href=\"#第三种方式（Getx推荐）\" class=\"headerlink\" title=\"第三种方式（Getx推荐）\"></a>第三种方式（Getx推荐）</h4><p>要关闭snackbars, dialogs, bottomsheets或任何你通常会用Navigator.pop(context)关闭的东西。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.back();</span><br></pre></td></tr></table></figure>\n\n<p>进入下一个页面，但<strong>没有返回上一个页面的选项</strong>（用于闪屏页，登录页面等）。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.off(NextScreen());</span><br></pre></td></tr></table></figure>\n\n<p>进入下一个页面并<strong>取消之前的所有路由</strong>（在购物车、投票和测试中很有用）</p>\n<p>如果你熟悉uniapp的话，这个相当于redirect</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.offAll(NextScreen());</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"状态管理\"><a href=\"#状态管理\" class=\"headerlink\" title=\"状态管理\"></a>状态管理</h2><p><strong>注意：这里仅仅站在前端的角度去做</strong></p>\n<p>这里仅使用Getx进行状态管理，如果你熟悉前端的话，这一步相当于vue的vuex，react的redux。</p>\n<p>新建一个store文件夹</p>\n<p>index.dart，这是一个统一管理所有状态的文件，</p>\n<p>Get.put方法运行放入一个控制器，这个控制器你可以把它当成一个全局的公共变量，放入之后Getx会进行内部的管理和追踪</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//类似于vuex</span><br><span class=\"line\"></span><br><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">import &#x27;./user.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">//统一管理所有的store</span><br><span class=\"line\">class Store &#123;</span><br><span class=\"line\">  static final Store _instance = Store._internal();</span><br><span class=\"line\"></span><br><span class=\"line\">  factory Store() &#123;</span><br><span class=\"line\">    return _instance;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  //将所有的store都放入这里</span><br><span class=\"line\">  Store._internal() &#123;</span><br><span class=\"line\">    Get.put(UserController());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过继承GetxController使其变成一个可以追踪的控制器，并暴露出<strong>响应式变量和函数</strong>，这一步相当于暴露出所有的<strong>state</strong>，函数就是用来改变state的函数，相当于<strong>mutation</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class UserController extends GetxController &#123;</span><br><span class=\"line\">  //这里定义变量</span><br><span class=\"line\">  RxInt count = 0.obs;</span><br><span class=\"line\"></span><br><span class=\"line\">  //重置函数</span><br><span class=\"line\">  void reset() &#123;</span><br><span class=\"line\">    count.value = 0;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //这里定义函数</span><br><span class=\"line\">  void increment() &#123;</span><br><span class=\"line\">    count.value++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>最后，在main.dart进行引入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;./store/index.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() &#123;</span><br><span class=\"line\">  Store(); // 初始化Store实例</span><br><span class=\"line\">  runApp(MyApp());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这样，你就可以在App所有的页面拿到这些数据了，如何获取呢，</p>\n<p>既然有put的操作，就有find的操作</p>\n<p>Get.find函数非常强大，他能找到对应的控制器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">final UserController userController = Get.find&lt;UserController&gt;();</span><br></pre></td></tr></table></figure>\n\n<p>所有的数据就在userController中：</p>\n<p>注意：为了改变数据能够响应式的变化布局，因此，你需要使用Obx函数对响应式数据进行追踪，相当于<strong>前端的观察者模式</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:flutter/material.dart&#x27;;</span><br><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">import &#x27;../../store/user.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class CatrgroyPage extends StatefulWidget &#123;</span><br><span class=\"line\">  const CatrgroyPage(&#123;super.key&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  State&lt;CatrgroyPage&gt; createState() =&gt; _CatrgroyPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _CatrgroyPageState extends State&lt;CatrgroyPage&gt; &#123;</span><br><span class=\"line\">  //通过Get.find获取同一个控制器实例，可以使用数据,注意，只有先put控制器，才能find，否则会报错</span><br><span class=\"line\">  final UserController userController = Get.find&lt;UserController&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Center(</span><br><span class=\"line\">      child: Column(children: [</span><br><span class=\"line\">        Obx(() =&gt; Text(&#x27;分类当前store里面的数值: $&#123;userController.count.value&#125;&#x27;)),</span><br><span class=\"line\">        ElevatedButton(</span><br><span class=\"line\">            onPressed: () &#123;</span><br><span class=\"line\">              //不建议这么改，这样会导致数据的改变无法追踪，尽量调用方法去使用</span><br><span class=\"line\">              // userfind.count.value = 10;</span><br><span class=\"line\">              //建议这么修改</span><br><span class=\"line\">              userController.reset();</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            child: const Text(&quot;重置&quot;))</span><br><span class=\"line\">      ]),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>看到这里，如果你是一名前端，你可以简单的把它理解成，通过定义一个函数，把函数放入Getx（put）中，Getx就可以自动帮你管理，要使用就拿出来（find），同时数据的改变要引起页面的重新渲染，需要使用观察者（Obx）通知Getx对页面进行改变，是不是有vue的双向绑定的意思了。</p>\n<p><strong>如果你不使用Getx，但是你的数据改变没有引起页面的变化，你需要看看是否使用了setState函数，这跟React的思路是一样的，如果你了解React，你就明白什么意思了。</strong></p>\n<h2 id=\"Webview\"><a href=\"#Webview\" class=\"headerlink\" title=\"Webview\"></a>Webview</h2><p>这里使用Webiew_Flutter插件来实现，这是官方提供的webview插件</p>\n<p>这里仅使用于安卓或苹果移动端设备，不适用于web</p>\n<h3 id=\"下载依赖\"><a href=\"#下载依赖\" class=\"headerlink\" title=\"下载依赖\"></a>下载依赖</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">webview_flutter: ^4.4.1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"开启权限\"><a href=\"#开启权限\" class=\"headerlink\" title=\"开启权限\"></a>开启权限</h3><p>安卓需要开启网络权限，默认是开启的</p>\n<p>苹果需要配置ios&#x2F;Runner&#x2F;info.plist文件，加上这个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 使ios运行运行webview --&gt;</span><br><span class=\"line\">\t&lt;key&gt;io.flutter.embedded_views_preview&lt;/key&gt;</span><br><span class=\"line\">   &lt;string&gt;YES&lt;/string&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p><strong>第一步，先声明一个weviewController</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">late WebViewController controller;</span><br></pre></td></tr></table></figure>\n\n<p><strong>第二步，在 initState 中初始化 controller</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void initState() &#123;</span><br><span class=\"line\">  //第二步，在 initState 中初始化 controller</span><br><span class=\"line\">  controller = WebViewController()</span><br><span class=\"line\">     //默认是不开启的，手动开启支持js</span><br><span class=\"line\">    ..setJavaScriptMode(JavaScriptMode.unrestricted)</span><br><span class=\"line\">   ..loadRequest(Uri.parse(&#x27;https://www.csdn.net/&#x27;), headers: &#123;&#125;)</span><br><span class=\"line\">  super.initState();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>第三步，使用WebViewWidget,使用sizebox可以控制大小</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">     SizedBox(</span><br><span class=\"line\">         height: 400,</span><br><span class=\"line\">         child: WebViewWidget(</span><br><span class=\"line\">             //控制器</span><br><span class=\"line\">             controller: controller,</span><br><span class=\"line\">)),</span><br></pre></td></tr></table></figure>\n\n<p>这样就大功告成了，你就可以在页面上面看到webview页面了</p>\n<p>手势操作，在WebViewWidget配置第二个参数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//手势操作</span><br><span class=\"line\">gestureRecognizers: &#123;</span><br><span class=\"line\">  Factory&lt;VerticalDragGestureRecognizer&gt;(</span><br><span class=\"line\">    () &#123;</span><br><span class=\"line\">      return VerticalDragGestureRecognizer()</span><br><span class=\"line\">        ..onStart = (DragStartDetails details) &#123;</span><br><span class=\"line\">          print(&quot;start&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ..onDown = (DragDownDetails details) &#123;</span><br><span class=\"line\">          print(&quot;down: $details&quot;);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>设置UA</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">..setUserAgent(</span><br><span class=\"line\">         // &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36&quot;</span><br><span class=\"line\">         &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36&quot;)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>路由操作：这个非常种要，可以追踪链接变化，注入JS，拦截等操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">..setNavigationDelegate(NavigationDelegate(</span><br><span class=\"line\">  //   //页面开始请求,获取页面请求</span><br><span class=\"line\">  onNavigationRequest: (requset) &#123;</span><br><span class=\"line\">    print(&quot;页面请求参数 $&#123;requset.url&#125;&quot;);</span><br><span class=\"line\">    return NavigationDecision.navigate;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  //   //页面开始加载</span><br><span class=\"line\">  //   onPageStarted: (url) &#123;&#125;,</span><br><span class=\"line\">  //页面加载完毕,注入js,既使 WebView 加载的页面中可能还有链接，跳到另一个地址，js 注入的代码依然有效！</span><br><span class=\"line\">  onPageFinished: (url) async &#123;</span><br><span class=\"line\">    var cookie = await controller</span><br><span class=\"line\">        .runJavaScriptReturningResult(&#x27;document.cookie&#x27;) as String;</span><br><span class=\"line\"></span><br><span class=\"line\">    var ua = await controller</span><br><span class=\"line\">        .runJavaScriptReturningResult(&#x27;navigator.userAgent;&#x27;) as String;</span><br><span class=\"line\">    print(&quot;当前页面的cookie：$cookie,当前的ua是 $ua&quot;);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  //   //加载错误</span><br><span class=\"line\">  //   onWebResourceError: (error) &#123;</span><br><span class=\"line\">  //     print(error);</span><br><span class=\"line\">  //   &#125;,</span><br><span class=\"line\">));</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a>国际化</h2><p>使用Getx进行国际化配置非常简单，这里站在前端角度去进行配置</p>\n<p>建立一个i18n文件夹，统一管理在index</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\">import &#x27;./zh_CN.dart&#x27;;</span><br><span class=\"line\">import &#x27;./en_US.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class Messages extends Translations &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; &#123;</span><br><span class=\"line\">        ...ZhCN().keys,</span><br><span class=\"line\">        ...EnUS().keys,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>en_US</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class EnUS extends Translations &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; &#123;</span><br><span class=\"line\">        &#x27;en_US&#x27;: &#123;</span><br><span class=\"line\">          &#x27;hello&#x27;: &#x27;hello world&#x27;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>zh_CN</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;package:get/get.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">class ZhCN extends Translations &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Map&lt;String, Map&lt;String, String&gt;&gt; get keys =&gt; &#123;</span><br><span class=\"line\">        &#x27;zh_CN&#x27;: &#123;</span><br><span class=\"line\">          &#x27;hello&#x27;: &#x27;你好 世界&#x27;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在main.dart进行配置</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#x27;i18n/index.dart&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@override</span><br><span class=\"line\"> Widget build(BuildContext context) &#123;</span><br><span class=\"line\">   return GetMaterialApp(</span><br><span class=\"line\">     //去除debug</span><br><span class=\"line\">     debugShowCheckedModeBanner: false,</span><br><span class=\"line\">     title: &quot;Flutter Demo&quot;,</span><br><span class=\"line\">     //初始化路由</span><br><span class=\"line\">     initialRoute: &quot;/&quot;,</span><br><span class=\"line\">     //命名路由</span><br><span class=\"line\">     // routes: router(context),</span><br><span class=\"line\">     // 以后统一使用这种方式去管理路由</span><br><span class=\"line\">     getPages: AppPage.routes,</span><br><span class=\"line\">     translations: Messages(), // 你的翻译</span><br><span class=\"line\">     locale: Locale(&#x27;zh&#x27;, &#x27;CN&#x27;), // 将会按照此处指定的语言翻译</span><br><span class=\"line\">     fallbackLocale: Locale(&#x27;en&#x27;, &#x27;US&#x27;), // 添加一个回调语言选项，以备上面指定的语言翻译不存在</span><br><span class=\"line\">     // locale: ui.window.locale,  //读取系统语言</span><br><span class=\"line\">   );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text(&#x27;hello&#x27;.tr)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>改变语言</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Get.updateLocale(Locale(&#x27;en&#x27;, &#x27;US&#x27;))；</span><br><span class=\"line\">Get.updateLocale(Locale(&#x27;zh&#x27;, &#x27;CN&#x27;));</span><br></pre></td></tr></table></figure>\n\n\n\n<p>非常简单，这样，你只需要在不同地区配置不同文件即可。</p>\n<h2 id=\"样式和布局\"><a href=\"#样式和布局\" class=\"headerlink\" title=\"样式和布局\"></a>样式和布局</h2><p>样式和布局可以查看我项目代码中的demo，每一个样式文件都有命名标识，如果要运行查看，直接复制替换到main.dart进行运行查看即可，这里不多赘述，样式和布局多敲就可以。</p>\n<p>或者运行项目，点击查看对应的效果，结合代码进行查看。</p>\n<h2 id=\"网络Api\"><a href=\"#网络Api\" class=\"headerlink\" title=\"网络Api\"></a>网络Api</h2><p>具体可以看我代码中的api部分</p>\n<h1 id=\"真机测试\"><a href=\"#真机测试\" class=\"headerlink\" title=\"真机测试\"></a>真机测试</h1><h2 id=\"安卓机型\"><a href=\"#安卓机型\" class=\"headerlink\" title=\"安卓机型\"></a>安卓机型</h2><p>如果你使用安卓设备进行测试的话，仅需要开启<code>开发者模式</code>并将手机连接到电脑设备上选择传输文件即可</p>\n<h2 id=\"苹果机型\"><a href=\"#苹果机型\" class=\"headerlink\" title=\"苹果机型\"></a>苹果机型</h2><p>如果你是iOS设备的话，请仔细看以下步骤：</p>\n<p><strong>第一步，你需要描述文件和p12证书</strong>，这两个东西你只能从开发者账号中去获取</p>\n<p>双击打开p12证书，这时候系统会弹出弹窗，请输入证书密码，并将证书放入登录（在弹窗的右下角有选项）</p>\n<p>第二步，打开Flutter项目，点击ios&#x2F;Runner.xcworkspace文件，这个时候会自动打开Xcode，请你配置上对应的包名以及p12文件，没有出现红色警告说明配置成功，这个时候只需要点击左上角的运行命令即可。</p>\n<p>第三步，后续就可以直接在vscode中运行即可，可以不需要在xcode中打开。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}